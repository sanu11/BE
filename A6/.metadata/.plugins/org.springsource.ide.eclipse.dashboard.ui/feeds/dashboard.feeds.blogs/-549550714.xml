<?xml version="1.0" encoding="UTF-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Spring</title>
  <link rel="alternate" href="https://spring.io/blog" />
  <link rel="self" href="https://spring.io/blog.atom" />
  <id>http://spring.io/blog.atom</id>
  <icon>https://spring.io/favicon.ico</icon>
  <updated>2016-10-14T16:58:02Z</updated>
  <entry>
    <title>Java DSL for Spring Integration 1.2 Release is available</title>
    <link rel="alternate" href="https://spring.io/blog/2016/10/14/java-dsl-for-spring-integration-1-2-release-is-available" />
    <category term="releases" label="Releases" />
    <author>
      <name>Artem Bilan</name>
    </author>
    <id>tag:spring.io,2016-10-14:2656</id>
    <updated>2016-10-14T16:58:02Z</updated>
    <content type="html">&lt;div class="paragraph"&gt;
&lt;p&gt;Dear Spring Community,&lt;/p&gt;
&lt;/div&gt;
&lt;div class="paragraph"&gt;
&lt;p&gt;It&amp;#8217;s my pleasure to announce that the Java DSL for Spring Integration &lt;code&gt;1.2 GA&lt;/code&gt; is now available.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="paragraph"&gt;
&lt;p&gt;The artifact &lt;code&gt;org.springframework.integration:spring-integration-java-dsl:1.2.0.RELEASE&lt;/code&gt; is available in the &lt;a href="http://repo.spring.io/release"&gt;Release repo&lt;/a&gt; and &lt;a href="http://search.maven.org/#search%7Cga%7C1%7Cspring-integration-java-dsl"&gt;Maven Central&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="paragraph"&gt;
&lt;p&gt;Since the previous &lt;a href="https://spring.io/blog/2016/09/27/java-dsl-for-spring-integration-1-2-release-candidate-1-is-available"&gt;Release Candidate 1&lt;/a&gt; we have received some feedback and these additional features have been added:&lt;/p&gt;
&lt;/div&gt;
&lt;h1 id="thread-barrier-support" class="sect0"&gt;&lt;a class="anchor" href="#thread-barrier-support"&gt;&lt;/a&gt;Thread Barrier support&lt;/h1&gt;
&lt;div class="paragraph"&gt;
&lt;p&gt;A new &lt;code&gt;.barrier()&lt;/code&gt; and its mirror &lt;code&gt;.trigger()&lt;/code&gt; EIP-methods have been added to the &lt;code&gt;IntegrationFlow&lt;/code&gt; definition:&lt;/p&gt;
&lt;/div&gt;
&lt;div class="listingblock"&gt;
&lt;div class="content"&gt;
&lt;pre class="prettyprint highlight"&gt;&lt;code class="language-java" data-lang="java"&gt;private static final String BARRIER = "barrier";

@Bean
public IntegrationFlow barrierFlow() {
    return f -&amp;gt; f
        .barrier(10000, b -&amp;gt; b
                .correlationStrategy(
                         new HeaderAttributeCorrelationStrategy(BARRIER))
                 .outputProcessor(g -&amp;gt;
                         g.getMessages()
                                 .stream()
                                 .skip(1)
                                 .findFirst()
                                 .get()))
         .channel(c -&amp;gt; c.queue("barrierResults"));
}

@Bean
public IntegrationFlow releaseBarrierFlow(
                          MessageTriggerAction barrierTriggerAction) {
    return IntegrationFlows.from((Channels c) -&amp;gt; c.queue("releaseChannel"))
        .trigger(barrierTriggerAction,
            e -&amp;gt; e.poller(p -&amp;gt; p.fixedDelay(100)))
        .get();
}&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;h1 id="poller-code-errorchannel-code" class="sect0"&gt;&lt;a class="anchor" href="#poller-code-errorchannel-code"&gt;&lt;/a&gt;Poller &lt;code&gt;errorChannel&lt;/code&gt;&lt;/h1&gt;
&lt;div class="paragraph"&gt;
&lt;p&gt;A more convenient &lt;code&gt;PollerSpec.errorChannel(String)&lt;/code&gt; has been added after upgrading to Spring Integration &lt;code&gt;4.3.4&lt;/code&gt;.
We can now specify just the bean name for the &lt;code&gt;errorChannel&lt;/code&gt; on the Poller definition and it will be resolved later when the first &lt;code&gt;ErrorMessage&lt;/code&gt; is sent.&lt;/p&gt;
&lt;/div&gt;
&lt;h1 id="filesplitter-improvements" class="sect0"&gt;&lt;a class="anchor" href="#filesplitter-improvements"&gt;&lt;/a&gt;FileSplitter improvements&lt;/h1&gt;
&lt;div class="paragraph"&gt;
&lt;p&gt;The &lt;code&gt;SplitterEndpointSpec&lt;/code&gt; now provides a &lt;code&gt;delimiters()&lt;/code&gt; option which is mapped to the &lt;code&gt;DefaultMessageSplitter.setDelimiters()&lt;/code&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="paragraph"&gt;
&lt;p&gt;You can find all of the features introduced in version &lt;code&gt;1.2&lt;/code&gt; in the blog posts announcing previous Milestone releases:&lt;/p&gt;
&lt;/div&gt;
&lt;div class="ulist"&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://spring.io/blog/2016/07/08/java-dsl-for-spring-integration-1-2-m1-and-1-1-3-are-available"&gt;Milestone 1&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://spring.io/blog/2016/09/15/java-dsl-for-spring-integration-1-2-milestone-2-is-available"&gt;Milestone 2&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://spring.io/blog/2016/09/27/java-dsl-for-spring-integration-1-2-release-candidate-1-is-available"&gt;Release Candidate 1&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;h1 id="next-steps" class="sect0"&gt;&lt;a class="anchor" href="#next-steps"&gt;&lt;/a&gt;Next Steps&lt;/h1&gt;
&lt;div class="paragraph"&gt;
&lt;p&gt;The Spring Integration Java DSL project is moving to the &lt;a href="http://projects.spring.io/spring-integration/"&gt;Spring Integration Core&lt;/a&gt; &lt;code&gt;5.0&lt;/code&gt; and Java 8 code base.
Version &lt;code&gt;1.2.x&lt;/code&gt; will remain in support for bug fixes.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="paragraph"&gt;
&lt;p&gt;A big thanks to everyone from the community for feedback that has been provided.
Without you we wouldn&amp;#8217;t have such a good comprehensive product!&lt;/p&gt;
&lt;/div&gt;
&lt;div class="paragraph"&gt;
&lt;p&gt;&lt;a href="https://github.com/spring-projects/spring-integration-java-dsl"&gt;Project Page&lt;/a&gt; | &lt;a href="https://github.com/spring-projects/spring-integration-java-dsl/wiki/Spring-Integration-Java-DSL-Reference"&gt;Documentation&lt;/a&gt; | &lt;a href="https://github.com/spring-projects/spring-integration-java-dsl/issues"&gt;Issues&lt;/a&gt; | &lt;a href="http://stackoverflow.com/questions/tagged/spring-integration"&gt;Help&lt;/a&gt; | &lt;a href="https://gitter.im/spring-projects/spring-integration"&gt;Chat&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;</content>
  </entry>
  <entry>
    <title>Spring Tips: A gentle introduction to Spring Integration</title>
    <link rel="alternate" href="https://spring.io/blog/2016/10/13/spring-tips-a-gentle-introduction-to-spring-integration" />
    <category term="engineering" label="Engineering" />
    <author>
      <name>Pieter Humphrey</name>
    </author>
    <id>tag:spring.io,2016-10-13:2655</id>
    <updated>2016-10-13T18:27:23Z</updated>
    <content type="html">&lt;p&gt;Speaker: &lt;a href="https://www.twitter.com/starbuxman"&gt;Josh Long&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Hi Spring fans! In this tip, we&amp;rsquo;ll look at enterprise application integration with Spring Integration and the Spring Integration Java Config DSL.&lt;/p&gt;
&lt;iframe width="560" height="315" src="https://www.youtube.com/embed/MTKlk8_9aAw" frameborder="0" allowfullscreen&gt;&lt;/iframe&gt;</content>
  </entry>
  <entry>
    <title>Spring Cloud Task 1.1.0.M2 is now available</title>
    <link rel="alternate" href="https://spring.io/blog/2016/10/12/spring-cloud-task-1-1-0-m2-is-now-available" />
    <category term="releases" label="Releases" />
    <author>
      <name>Glenn Renfro</name>
    </author>
    <id>tag:spring.io,2016-10-12:2652</id>
    <updated>2016-10-12T22:37:20Z</updated>
    <content type="html">&lt;p&gt;We are pleased to announce that Spring Cloud Task 1.1.0.M2 is now available via Github and the Pivotal download repository. Many thanks to all of those who contributed to this release.&lt;/p&gt;&lt;h2&gt;&lt;a href="#what-rsquo-s-new-in-spring-cloud-task-1-1-0-m2" class="anchor" name="what-rsquo-s-new-in-spring-cloud-task-1-1-0-m2"&gt;&lt;/a&gt;What&amp;rsquo;s new in Spring Cloud Task 1.1.0.M2&lt;/h2&gt;
&lt;p&gt;This release continues to progress on 1.1.0&amp;rsquo;s main theme of improving overall task functionality as well as migrating features that existed within Spring XD to Spring Cloud Task. The main updates for this release are the following:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;em&gt;Support for Generated Task Id&lt;/em&gt; - A common use case for a Spring Cloud Task application is to launch it within a PaaS, like Cloud Foundry or other cloud infrastructure. Because of this, there may be a delay between the launch request and the actual application beginning. Worse, the system responsible for launching the application may not actually launch the task for reasons outside of Spring Cloud Task&amp;rsquo;s control (lack of resources, network issues, etc). This feature allows the caller to register that a task has been requested to run. This way, no request of a task is lost between the request and the actual start of the Boot application.&lt;/li&gt;
  &lt;li&gt;&lt;em&gt;Support for External Execution Id&lt;/em&gt; - When executing a task on a PaaS or other cloud infrastructure, there is typically a mapping that needs to occur between the task&amp;rsquo;s execution id and the id provided by the underlying system. This feature provides the ability to correlate those two for things like log management, audit, etc.&lt;/li&gt;
&lt;/ul&gt;&lt;h2&gt;&lt;a href="#what-rsquo-s-next" class="anchor" name="what-rsquo-s-next"&gt;&lt;/a&gt;What&amp;rsquo;s next&lt;/h2&gt;
&lt;p&gt;Spring Cloud Task 1.1.0 is expected to be GA before the end of the year in line with Spring Cloud Data Flow 1.1.0. Between now and then, we&amp;rsquo;ll be adding additional capabilities to better integrate with Spring Cloud Data Flow.&lt;/p&gt;
&lt;p&gt;We look forward to your feedback on these new features in &lt;a href="https://github.com/spring-cloud/spring-cloud-task/issues"&gt;Github&lt;/a&gt;, &lt;a href="http://stackoverflow.com/tags/spring-cloud-task"&gt;StackOverflow&lt;/a&gt;, or to me directly via Twitter &lt;a href="https://twitter.com/michaelminella"&gt;@michaelminella&lt;/a&gt;!&lt;/p&gt;
&lt;p&gt;&lt;a href="https://cloud.spring.io/spring-cloud-task/"&gt;Spring Cloud Task Home&lt;/a&gt; | &lt;a href="https://github.com/spring-cloud/spring-cloud-task"&gt;Source on GitHub&lt;/a&gt; | &lt;a href="http://docs.spring.io/spring-cloud-task/current/reference/htmlsingle/"&gt;Reference Documentation&lt;/a&gt;&lt;/p&gt;</content>
  </entry>
  <entry>
    <title>Webinar: Consumer Driven Contracts and Your Microservice Architecture</title>
    <link rel="alternate" href="https://spring.io/blog/2016/10/12/webinar-consumer-driven-contracts-and-your-microservice-architecture" />
    <category term="news" label="News and Events" />
    <author>
      <name>Pieter Humphrey</name>
    </author>
    <id>tag:spring.io,2016-10-13:2653</id>
    <updated>2016-10-12T17:44:00Z</updated>
    <content type="html">&lt;p&gt;TDD introduced many improvements into the development process, but in our opinion the biggest impact relates to code design. Looking at the code from the usage perspective (by first writing an acceptance test) allows us to focus on usability rather than concrete implementation. Unfortunately, we usually rest on our laurels not trying to uplift this practice to the architecture level. &lt;/p&gt;
&lt;p&gt;This presentation will show you how you can use the Spring Cloud Contract Verifier functionality in order to have a fully automated solution to stub your HTTP / Messaging collaborators. Just by adding proper configuration, you&amp;rsquo;ll surround the microservices you are testing with faked stubs that are tested against their producer, making much more realistic tests. &lt;/p&gt;
&lt;p&gt;We will write a system using the CDC approach together with Spring Boot, Spring Cloud and Spring Cloud Contract Verifier. I&amp;rsquo;ll show you how easy it is to write applications that have a consumer-driven API, allowing a developer to speed up the time for writing better quality software.&lt;/p&gt;
&lt;p&gt;Date: Tuesday, October 25, 2016&lt;br/&gt;Time: 10:00AM PDT (San Francisco GMT-07:00)&lt;br/&gt;&lt;a href="http://connect.pivotal.io/OSS_Webinar_10AM-Con-Driven-Contracts-Microservice-Arch_Q416_RegisterSpring.html"&gt;Register&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Date: Tuesday, October 25, 2016&lt;br/&gt;Time: 3:00PM GMT (London, GMT)&lt;br/&gt;&lt;a href="http://connect.pivotal.io/OSS_Webinar_7AMCon-DrivenContractsMicroserviceArch_Q416_RegisterSpring.html"&gt;Register&lt;/a&gt;&lt;/p&gt;</content>
  </entry>
  <entry>
    <title>Spring Data Geode 1.0.0.APACHE-GEODE-INCUBATING-M3 released</title>
    <link rel="alternate" href="https://spring.io/blog/2016/10/11/spring-data-geode-1-0-0-apache-geode-incubating-m3-released" />
    <category term="engineering" label="Engineering" />
    <author>
      <name>John Blum</name>
    </author>
    <id>tag:spring.io,2016-10-11:2650</id>
    <updated>2016-10-11T22:45:00Z</updated>
    <content type="html">&lt;p&gt;I apologize to both the Spring and Apache Geode communities for the delay, relative to the Apache Geode &lt;a href="http://markmail.org/search/?q=list%3Aorg.apache.geode.user+order%3Adate-backward#query:list%3Aorg.apache.geode.user%20order%3Adate-backward%20from%3A%22Anthony%20Baker%22+page:1+mid:bkuiicogrvqb34oo+state:results"&gt;M3 release announcement&lt;/a&gt;, but I am very excited and pleased to follow that with the release of Spring Data for &lt;a href="http://geode.incubator.apache.org/releases/"&gt;Apache Geode 1.0.0-incubating.M3&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;You can get the bits from &lt;a href="http://search.maven.org/#search%7Cga%7C1%7Cgeode"&gt;Maven Central&lt;/a&gt; by including the following dependency in either your application Maven or Gradle build files &amp;hellip;&lt;/p&gt;&lt;h4&gt;&lt;a href="#maven" class="anchor" name="maven"&gt;&lt;/a&gt;Maven&lt;/h4&gt;
&lt;pre&gt;&lt;code class="prettyprint xml"&gt;&amp;lt;dependency&amp;gt;&#xD;
  &amp;lt;groupId&amp;gt;org.springframework.data&amp;lt;/groupId&amp;gt;&#xD;
  &amp;lt;artifactId&amp;gt;spring-data-geode&amp;lt;/artifactId&amp;gt;&#xD;
  &amp;lt;version&amp;gt;1.0.0.APACHE-GEODE-INCUBATING-M3&amp;lt;/version&amp;gt;&#xD;
&amp;lt;/dependency&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;h4&gt;&lt;a href="#gradle" class="anchor" name="gradle"&gt;&lt;/a&gt;Gradle&lt;/h4&gt;
&lt;pre&gt;&lt;code class="prettyprint groovy"&gt;compile &amp;#39;org.springframework.data:spring-data-geode:1.0.0.APACHE-GEODE-INCUBATING-M3&amp;#39;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Including the &lt;code&gt;spring-data-geode&lt;/code&gt; dependency will transitively pull in all required Apache Geode artifacts so you can start building Spring applications that use Apache Geode today.&lt;/p&gt;&lt;h2&gt;&lt;a href="#what-rsquo-s-new" class="anchor" name="what-rsquo-s-new"&gt;&lt;/a&gt;What&amp;rsquo;s New&lt;/h2&gt;
&lt;p&gt;While not much functionally changed between Apache Geode M2 and M3 (mainly &lt;a href="https://cwiki.apache.org/confluence/display/GEODE/1.0.0-incubating.M3+Release"&gt;bug fixes&lt;/a&gt;), many things did &lt;a href="https://github.com/spring-projects/spring-data-gemfire/blob/1.0.0.APACHE-GEODE-INCUBATING-M3/src/main/resources/changelog.txt#L7-L52"&gt;change&lt;/a&gt; in &lt;em&gt;Spring Data Geode&lt;/em&gt;. One key feature stands above all the rest.&lt;/p&gt;&lt;h2&gt;&lt;a href="#setting-the-stage" class="anchor" name="setting-the-stage"&gt;&lt;/a&gt;Setting the Stage&lt;/h2&gt;
&lt;p&gt;Because the focus of &lt;a href="http://geode.incubator.apache.org/"&gt;Apache Geode&lt;/a&gt; (and by extension, &lt;a href="https://pivotal.io/big-data/pivotal-gemfire"&gt;Pivotal GemFire&lt;/a&gt;) has always been to provide enough functional breadth and flexibility to address a wide array of &lt;a href="https://pivotal.io/big-data/pivotal-gemfire"&gt;complex customer requirements and use cases&lt;/a&gt; (click &amp;ldquo;&lt;em&gt;Use Cases&lt;/em&gt;&amp;rdquo;), it has made it difficult for users to get up and running as quickly, and as easily as possible. And, though it has much stronger consistency guarantees, and often times, better performance, it is hard to compete with the &lt;em&gt;out-of-box&lt;/em&gt; experience when using alternative, comparable solutions.&lt;/p&gt;
&lt;p&gt;To gain more insight into the problem along with how we are focused on resolving it for Apache Geode and Pivotal GemFire, checkout my talk in the August, &lt;a href="https://www.youtube.com/watch?v=6SdNawIJi_c&amp;feature=youtu.be"&gt;Apache Geode Clubhouse Meeting&lt;/a&gt;.&lt;/p&gt;&lt;h2&gt;&lt;a href="#problem-solution" class="anchor" name="problem-solution"&gt;&lt;/a&gt;Problem/Solution&lt;/h2&gt;
&lt;p&gt;The problem has been rooted in the fact that Apache Geode has lacked an opinionated and consistent programming/configuration model, particularly for application development. So really, we don&amp;rsquo;t need to look any further than the &lt;a href="http://projects.spring.io/spring-framework/"&gt;Spring Framework&lt;/a&gt;. However, that still leaves &amp;ldquo;opinion&amp;rdquo;.&lt;/p&gt;
&lt;p&gt;Once again, Spring gives us &lt;a href="http://projects.spring.io/spring-boot/"&gt;Spring Boot&lt;/a&gt;, and what a beautiful piece of engineering it is, so elegant, so simple. And, as you will see below, it has truly been an inspiration for the work on &lt;em&gt;Spring Data Geode&lt;/em&gt;.&lt;/p&gt;&lt;h2&gt;&lt;a href="#shut-up-and-show-me-ldquo-the-code-rdquo-hellip" class="anchor" name="shut-up-and-show-me-ldquo-the-code-rdquo-hellip"&gt;&lt;/a&gt;Shut Up and Show Me &amp;ldquo;The Code&amp;rdquo;&amp;hellip;&lt;/h2&gt;
&lt;p&gt;In the past, Spring developers had to configure Geode with either &lt;a href="https://github.com/jxblum/contacts-application/blob/master/configuration-example/src/test/resources/example/config/spring/xml/HazelcastApiExampleTests-context.xml"&gt;XML&lt;/a&gt;, or &lt;a href="https://github.com/jxblum/contacts-application/blob/master/configuration-example/src/test/java/example/config/spring/java/HazelcastApiExampleTests.java#L62-L79"&gt;Java config&lt;/a&gt;, and then use a bootstrapping mechanism, like &lt;a href="http://geode.docs.pivotal.io/docs/tools_modules/gfsh/command-pages/start.html#topic_3764EE2DB18B4AE4A625E0354471738A"&gt;&lt;em&gt;Gfsh&lt;/em&gt;&lt;/a&gt;, or &lt;em&gt;Spring Boot&lt;/em&gt;, to get up and running. This has even been demonstrated in the &lt;a href="https://spring.io/guides/gs/accessing-data-gemfire/"&gt;guides&lt;/a&gt;. Neither one was really a significant advantage over the other until now.&lt;/p&gt;
&lt;p&gt;From this milestone release onward, &lt;em&gt;Spring Data Geode&lt;/em&gt; will include a new &lt;a href="https://github.com/spring-projects/spring-data-gemfire/tree/apache-geode/src/main/java/org/springframework/data/gemfire/config/annotation"&gt;set of annotations&lt;/a&gt;, very similar in form/function, and complimentary to, &lt;em&gt;Spring Boot&lt;/em&gt; annotations, but specifically for SD/Apache Geode, with 1 simple goal in mind&amp;hellip;&lt;/p&gt;
&lt;blockquote&gt;
  &lt;p&gt;Simply the &lt;em&gt;out-of-box&lt;/em&gt; experience in order to get users &lt;strong&gt;up and running&lt;/strong&gt; as &lt;strong&gt;quickly&lt;/strong&gt; and &lt;strong&gt;easily&lt;/strong&gt; as possible&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;So, let&amp;rsquo;s take our XML and Java config example and do it one more time&amp;hellip;&lt;/p&gt;
&lt;pre&gt;&lt;code class="prettyprint java"&gt;@SpringBootApplication&#xD;
@PeerCacheApplication&#xD;
@WithReplicateRegions(&amp;quot;myDistributedMap&amp;quot;)&#xD;
public class ExampleApplication implements CommandLineRunner {&#xD;
&#xD;
  public static void main(String[] args) {&#xD;
    SpringApplication.run(ExampleApplication.class, args);&#xD;
  }&#xD;
&#xD;
  @Resource(name = &amp;quot;myDistributedMap&amp;quot;)&#xD;
  private Region&amp;lt;String, String&amp;gt; myDistributedMap;&#xD;
&#xD;
  @Override&#xD;
  public void run(String... strings) throws Exception {&#xD;
    assertThat(myDistributedMap.put(&amp;quot;key&amp;quot;, &amp;quot;value&amp;quot;)).isNull();&#xD;
    assertThat(myDistributedMap.get(&amp;quot;key&amp;quot;)).isEqualTo(&amp;quot;value&amp;quot;);&#xD;
    assertThat(myDistributedMap.putIfAbsent(&amp;quot;somekey&amp;quot;, &amp;quot;somevalue&amp;quot;)).isNull();&#xD;
    assertThat(myDistributedMap.replace(&amp;quot;key&amp;quot;, &amp;quot;value&amp;quot;, &amp;quot;newvalue&amp;quot;)).isTrue();&#xD;
  }&#xD;
}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Pretty easy. This example is rather simplistic, but you can probably imagine some application configurations (for &lt;a href="https://github.com/jxblum/contacts-application/tree/master/repository-example/src/main/java/example/app/config"&gt;example&lt;/a&gt;; just follow the hierarchy) becoming pretty involved rather quickly.&lt;/p&gt;
&lt;p&gt;This is a teaser for now, so stay tuned for more.&lt;/p&gt;&lt;h2&gt;&lt;a href="#conclusion" class="anchor" name="conclusion"&gt;&lt;/a&gt;Conclusion&lt;/h2&gt;
&lt;p&gt;There will be many different annotations to address all the unique concerns in a consistent and robust way, providing out-of-box defaults along with many convenient, &amp;ldquo;enabling&amp;rdquo; features. Many of the details of this new &lt;em&gt;Annotation&lt;/em&gt; configuration model are still a work in progress, such as proper examples and documentation.&lt;/p&gt;
&lt;p&gt;In the interim, I have started the beginnings of a &lt;a href="https://github.com/jxblum/contacts-application"&gt;reference implementation&lt;/a&gt; that will showcase many of the features and functionality of using Spring and Apache Geode together (like the new &lt;a href="https://github.com/jxblum/contacts-application/tree/master/configuration-example"&gt;Annotation configuration model&lt;/a&gt;).&lt;/p&gt;
&lt;p&gt;Look for more communications from us down the road soon.&lt;/p&gt;
&lt;p&gt;As always, feedback is most welcomed, and you can reach out to us in &lt;a href="https://jira.spring.io/browse/SGF"&gt;JIRA&lt;/a&gt; or on &lt;a href="http://stackoverflow.com/questions/tagged/spring-data-gemfire"&gt;StackOverflow&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Thanks all!&lt;/p&gt;</content>
  </entry>
  <entry>
    <title>This Week in Spring - October 11, 2016</title>
    <link rel="alternate" href="https://spring.io/blog/2016/10/11/this-week-in-spring-october-11-2016" />
    <category term="engineering" label="Engineering" />
    <author>
      <name>Josh Long</name>
    </author>
    <id>tag:spring.io,2016-10-11:2651</id>
    <updated>2016-10-11T17:46:10Z</updated>
    <content type="html">&lt;p&gt;Welcome to another installment of &lt;em&gt;This Week in Spring&lt;/em&gt;! It&amp;rsquo;s already almost mid October and I can&amp;rsquo;t believe we&amp;rsquo;re almost in 2017! Time is sure flying quickly!&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;It&amp;rsquo;s an honor that today at the JAX London event, the &lt;a href="https://twitter.com/jaxenter/status/785897525488254976"&gt;JAX community &lt;strong&gt;voted Spring Boot as most innovative contribution to the Java ecosystem&lt;/strong&gt;&lt;/a&gt;. I&amp;rsquo;m sure I speak for the whole Spring team when I say, Thank You very much!&lt;/li&gt;
  &lt;li&gt;Martin Lippert just announced Spring Tool Suite 3.8.2 featuring smarter integration with &lt;a href="https://spring.io/blog/2016/10/07/spring-tool-suite-3-8-2-released"&gt;the Spring Initializr and updates to Eclipse Neon 1&lt;/a&gt; as well as bugfixes.&lt;/li&gt;
  &lt;li&gt;I published the first installment of what I hope will be a recurring series of hot-take, live-coded looks at different aspects of the Spring and Pivotal ecosystem.&lt;/li&gt;
  &lt;li&gt;Spring Cloud Data Flow ninja Eric Bottard just announced that &lt;a href="https://spring.io/blog/2016/10/06/spring-cloud-data-flow-for-cloud-foundry-1-1m1-and-1-0-1-released"&gt;Spring Cloud Data Flow for Cloud Foundry 1.1M1 and 1.0.1 have ben released&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Spring founder and Atomist CEO Dr. Rod Johnson has a new tool called Atomist which seeks to make your project development lifecycle easier. In this post, &lt;a href="https://medium.com/the-composition/evolving-projects-using-atomist-editors-fd3b1f057c86#.xfrsbtxbn"&gt;Rod looks at how to use Atomist with Spring Boot code&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;RedMonk analyst James Governor has some interesting insights in his JAX London talk on the new world of Java, which &lt;a href="https://jaxenter.com/129566-129566.html"&gt;are summarized in this nice summary blog from JAX&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;I did an interview &lt;a href="https://jaxenter.com/most-important-benefit-microservices-is-agility-129472.html"&gt;with JAXenter talking about the motivations behind microservices&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;I liked this post by Biju Kunjummen on how to &lt;a href="https://dzone.com/articles/customizing"&gt;customize Spring web suppports &lt;code&gt;HttpMessageConverters&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Boom! Save the date my friends! &lt;em&gt;SpringOne Platform 2017&lt;/em&gt; will be held &lt;a href="https://springoneplatform.io/"&gt;December 4-7, 2017, at Moscone West in San Francisco&lt;/a&gt;! I, for one, can&amp;rsquo;t freaking wait!&lt;/li&gt;
  &lt;li&gt;MyBatis is up and available on the Spring Initializr, &lt;a href="https://twitter.com/snicoll/status/785386501328760832"&gt;announced Spring ninja Stephane Nicoll&lt;/a&gt;. Enjoy!&lt;/li&gt;
  &lt;li&gt;Cool! InfoQ has a post &lt;a href="https://www.infoq.com/news/2016/10/spring-releases-boot"&gt;on the latest Spring Boot releases&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;This post on &lt;a href="http://nixmash.com/java/know-your-spring-boot-embedded-servlet-container/"&gt;Spring Boot&amp;rsquo;s embedded web containers&lt;/a&gt;, by Dave Burke, is a good read.&lt;/li&gt;
&lt;/ul&gt;</content>
  </entry>
  <entry>
    <title>Spring Tool Suite 3.8.2 released</title>
    <link rel="alternate" href="https://spring.io/blog/2016/10/07/spring-tool-suite-3-8-2-released" />
    <category term="releases" label="Releases" />
    <author>
      <name>Martin Lippert</name>
    </author>
    <id>tag:spring.io,2016-10-07:2649</id>
    <updated>2016-10-07T12:06:39Z</updated>
    <content type="html">&lt;p&gt;Dear Spring Community,&lt;/p&gt;
&lt;p&gt;I am happy to announce the 3.8.2 release of the Spring Tool Suite, our Eclipse-based tooling.&lt;/p&gt;
&lt;p&gt;STS 3.8.2 focuses on adopting Eclipse Neon.1 and fixing existing issues. The list of changes include:&lt;/p&gt;
&lt;ul&gt;&#xD;
&lt;li&gt;Updated to Eclipse Neon.1&lt;/li&gt;&#xD;
&lt;li&gt;Includes Eclipse Automatic Error Reporting&lt;/li&gt;&#xD;
&lt;li&gt;Custom Spring Initializr now usable directly from within STS&lt;/li&gt;&#xD;
&lt;li&gt;New Spring Starter Wizard now features default selections&lt;/li&gt;&#xD;
&lt;li&gt;Fixed a problem that caused parallel push of multiple apps in boot dashboard to fail&lt;/li&gt;&#xD;
&lt;li&gt;Fixed a deadlock when selecting BuildShip in New Spring Starter wizard&lt;/li&gt;&#xD;
&lt;li&gt;and more...&lt;/li&gt;&#xD;
&lt;/ul&gt;
&lt;p&gt;To download the distributions, please go visit:&lt;/p&gt;
&lt;ul&gt;&#xD;
&lt;li&gt;Spring Tool Suite: &lt;a href="https://spring.io/tools/sts/all"&gt;https://spring.io/tools/sts/all&lt;/a&gt;&lt;/li&gt;&#xD;
&lt;/ul&gt;
&lt;p&gt;Detailed new and noteworthy notes can be found here: &lt;a href="http://docs.spring.io/sts/nan/v382/NewAndNoteworthy.html"&gt;STS 3.8.2 New &amp;amp; Noteworthy&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Enjoy!&lt;/p&gt;</content>
  </entry>
  <entry>
    <title>Spring Cloud Data Flow for Cloud Foundry 1.1M1 and 1.0.1 released</title>
    <link rel="alternate" href="https://spring.io/blog/2016/10/06/spring-cloud-data-flow-for-cloud-foundry-1-1m1-and-1-0-1-released" />
    <category term="releases" label="Releases" />
    <author>
      <name>Eric Bottard</name>
    </author>
    <id>tag:spring.io,2016-10-06:2648</id>
    <updated>2016-10-06T14:07:23Z</updated>
    <content type="html">&lt;div class="paragraph"&gt;
&lt;p&gt;&lt;a href="http://cloud.spring.io/spring-cloud-dataflow-server-cloudfoundry/"&gt;Spring Cloud Data Flow for Cloud Foundry&lt;/a&gt; gets two new releases today, detailed below:&lt;/p&gt;
&lt;/div&gt;
&lt;div class="paragraph"&gt;
&lt;p&gt;&lt;strong&gt;1.0.1.GA&lt;/strong&gt; is a maintenance release that&lt;/p&gt;
&lt;/div&gt;
&lt;div class="ulist"&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Builds upon 2.0.1.RELEASE of Cloud Foundry’s Java Client and 3.0.2.RELEASE of Reactor&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Builds upon 1.0.1.RELEASE of Spring Cloud Data Flow core&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Gets general clarifications and improvements in the reference documentation&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Fixes a bug pertaining to multiple ORG + Space combination causing task launch failures&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Fixes a bug where environment variables were not propagated correctly when launching a task&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="paragraph"&gt;
&lt;p&gt;&lt;strong&gt;1.1.0.M1&lt;/strong&gt; is the first milestone in the new line of development. In addition to the bug fixes and dependency upgrades detailed above, it&lt;/p&gt;
&lt;/div&gt;
&lt;div class="ulist"&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Builds upon 1.1.0.M1 of Spring Cloud Data Flow core. See details &lt;a href="https://spring.io/blog/2016/09/16/spring-cloud-data-flow-1-1-m1-and-1-0-1-ga-released#1-1-m1-release"&gt;here&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Builds upon 1.1.0.M1 of &lt;a href="https://github.com/spring-cloud/spring-cloud-deployer-cloudfoundry"&gt;Spring Cloud Deployer for Cloud Foundry&lt;/a&gt;. As such, the following options are now available:&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Adds support to override default application “staging” and “starting” timeouts. This is particularly useful for development machines where resource constraints could cause timeout errors and as well, for applications that are very large in size&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Adds the ability to define custom routes (or no route at all) for the deployed applications in Cloud Foundry&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Adds the ability to turn-off health checks in entirety. This is particularly useful when remote debugging the deployed application at startup time&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="paragraph"&gt;
&lt;p&gt;As part of these releases, Spring Cloud Deployer for Cloud Foundry 1.0.1.GA and 1.1.0.M1 were also made available and can be consumed by any project that needs to leverage deployment capability to Cloud Foundry using the Spring Cloud Deployer abstraction.&lt;/p&gt;
&lt;/div&gt;</content>
  </entry>
  <entry>
    <title>Spring Tips: Functional Reactive Endpoints with Spring Framework 5.0</title>
    <link rel="alternate" href="https://spring.io/blog/2016/10/05/spring-tips-functional-reactive-endpoints-with-spring-framework-5-0" />
    <category term="news" label="News and Events" />
    <author>
      <name>Pieter Humphrey</name>
    </author>
    <id>tag:spring.io,2016-10-05:2647</id>
    <updated>2016-10-05T13:25:00Z</updated>
    <content type="html">&lt;p&gt;Speaker: Josh Long&lt;br/&gt;&lt;a href="https://www.twitter.com/starbuxman"&gt;https://www.twitter.com/starbuxman&lt;/a&gt;&lt;/p&gt;
&lt;iframe width="560" height="315" src="https://www.youtube.com/embed/JjrAmhlTjug" frameborder="0" allowfullscreen&gt;&lt;/iframe&gt;</content>
  </entry>
  <entry>
    <title>This Week in Spring - October 4th, 2016</title>
    <link rel="alternate" href="https://spring.io/blog/2016/10/05/this-week-in-spring-october-4th-2016" />
    <category term="engineering" label="Engineering" />
    <author>
      <name>Josh Long</name>
    </author>
    <id>tag:spring.io,2016-10-05:2646</id>
    <updated>2016-10-05T01:09:14Z</updated>
    <content type="html">&lt;p&gt;Welcome to another installment of &lt;em&gt;This Week in Spring&lt;/em&gt;! We&amp;rsquo;ve got a lot to look at so let&amp;rsquo;s get to it!&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;Spring Security lead Rob Winch &lt;a href="https://spring.io/blog/2016/10/04/spring-ldap-2-2-rc1"&gt;just released Spring Security LDAP 2.2RC1&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Spring Integration lead Gary Russell &lt;a href="https://spring.io/blog/2016/10/03/spring-integration-amqp-maintenance-releases-available"&gt;just announced Spring Integration and Spring AMQP release candidates&lt;/a&gt;; get the bits now!&lt;/li&gt;
  &lt;li&gt;Spring Data ninja Thomas Risberg just &lt;a href="https://spring.io/blog/2016/10/03/spring-cloud-data-flow-for-kubernetes-1-1-m1-and-1-0-1-ga-released"&gt;released Spring Cloud Data Flow for Kubernetes 1.1.M1&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Spring Data &lt;a href="https://spring.io/blog/2016/10/03/spring-data-hopper-sr4-and-gosling-sr6-released"&gt;lead Oliver Gierke announced Spring Data Hopper SR4 and Spring Data Gosling SR6&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Spring Statemachine lead &lt;a href="https://spring.io/blog/2016/09/29/spring-statemachine-1-2-0-m1-released"&gt;Janne Valkealahti just announced Spring Statemachine 1.2.0M1&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;I liked this GR8Conf talk by Jenn Strater on a test-driven approach to documenting REST APIs &lt;a href="https://www.youtube.com/watch?v=-HocWtMO3FY"&gt;with Spring REST Docs&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;This German language news roundup ever so briefly &lt;a href="https://jaxenter.de/spring5-eclipse-unide-atomist-kubernetes-rust-machine-learning-47485"&gt;looks at Spring 5 and Rod Johnson&amp;rsquo;s new endeavor, Atomist&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://jaxenter.com/most-important-benefit-microservices-is-agility-129472.html"&gt;JAXenter interviewed me, as well&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;check out &lt;a href="https://www.infoq.com/news/2016/10/netflix-zuul-asynch-nonblocking"&gt;what&amp;rsquo;s coming in Netflix Zuul&amp;rsquo;s future&lt;/a&gt; in this nice InfoQ post&lt;/li&gt;
  &lt;li&gt;EMC&amp;rsquo;s Paul Warren has some interesting projects you might dig: &lt;a href="https://paulcwarren.github.io/ginkgo4j/"&gt;check out Ginkgo4j do a BDD and Ginkgo-style test using Java&lt;/a&gt; and check out &lt;a href="https://paulcwarren.github.io/spring-content/"&gt;his Spring Data extensions to support arbitrary blob storage&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Also, I wanted to note the loss today &lt;a href="http://hintjens.com"&gt;of Pieter Hintjens&lt;/a&gt;, who - among his many contributions to the world - was the original designer of what would become the AMQP protocol that powers RabbitMQ. Rest in peace, Pieter.&lt;/p&gt;</content>
  </entry>
  <entry>
    <title>Spring LDAP 2.2 RC1</title>
    <link rel="alternate" href="https://spring.io/blog/2016/10/04/spring-ldap-2-2-rc1" />
    <category term="releases" label="Releases" />
    <author>
      <name>Rob Winch</name>
    </author>
    <id>tag:spring.io,2016-10-04:2645</id>
    <updated>2016-10-04T16:46:05Z</updated>
    <content type="html">&lt;div class="paragraph"&gt;
&lt;p&gt;On behalf of the community, I am pleased to announce the release of Spring LDAP 2.2.0.RC1.&lt;/p&gt;
&lt;/div&gt;
&lt;h1 id="what-s-new-in-spring-ldap-2-2" class="sect0"&gt;&lt;a class="anchor" href="#what-s-new-in-spring-ldap-2-2"&gt;&lt;/a&gt;What’s New in Spring LDAP 2.2&lt;/h1&gt;
&lt;div class="paragraph"&gt;
&lt;p&gt;You can find highlights of what&amp;#8217;s new in the &lt;a href="http://docs.spring.io/spring-ldap/docs/2.2.0.RC1/reference/#what-s-new-in-2-2"&gt;What’s New in Spring LDAP 2.2&lt;/a&gt; section of the reference.&lt;/p&gt;
&lt;/div&gt;
&lt;h1 id="contributions" class="sect0"&gt;&lt;a class="anchor" href="#contributions"&gt;&lt;/a&gt;Contributions&lt;/h1&gt;
&lt;div class="paragraph"&gt;
&lt;p&gt;Without the community we couldn&amp;#8217;t be the successful project we are today. I&amp;#8217;d like to thank everyone that created issues &amp;amp; provided feedback.&lt;/p&gt;
&lt;/div&gt;
&lt;h1 id="feedback-please" class="sect0"&gt;&lt;a class="anchor" href="#feedback-please"&gt;&lt;/a&gt;Feedback Please&lt;/h1&gt;
&lt;div class="paragraph"&gt;
&lt;p&gt;If you have feedback on this release, I encourage you to reach out via
&lt;a href="http://stackoverflow.com/questions/tagged/spring-ldap"&gt;StackOverflow&lt;/a&gt;,
&lt;a href="https://github.com/spring-projects/spring-ldap/issues"&gt;GitHub
Issues&lt;/a&gt;, or via the comments section. You can also ping me
&lt;a href="https://twitter.com/rob_winch"&gt;@rob_winch&lt;/a&gt; or Joe
&lt;a href="https://twitter.com/joe_grandja"&gt;@joe_grandja&lt;/a&gt; on Twitter.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="paragraph"&gt;
&lt;p&gt;Of course the best feedback comes in the form of
&lt;a href="https://github.com/spring-projects/spring-ldap/blob/master/CONTRIBUTING.md"&gt;contributions&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="paragraph"&gt;
&lt;p&gt;&lt;a href="http://projects.spring.io/spring-ldap/"&gt;Project Site&lt;/a&gt; |
&lt;a href="http://docs.spring.io/spring-ldap/site/docs/2.2.0.RC1/reference/htmlsingle/"&gt;Reference&lt;/a&gt;
|
&lt;a href="http://docs.spring.io/spring-ldap/site/docs/2.2.0.RC1/guides/html5/"&gt;Guides&lt;/a&gt;
| &lt;a href="http://stackoverflow.com/questions/tagged/spring-ldap"&gt;Help&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;</content>
  </entry>
  <entry>
    <title>Spring Integration, AMQP Maintenance Releases Available</title>
    <link rel="alternate" href="https://spring.io/blog/2016/10/03/spring-integration-amqp-maintenance-releases-available" />
    <category term="releases" label="Releases" />
    <author>
      <name>Gary Russell</name>
    </author>
    <id>tag:spring.io,2016-10-03:2644</id>
    <updated>2016-10-03T18:13:18Z</updated>
    <content type="html">&lt;div class="paragraph"&gt;
&lt;p&gt;Spring Integration &lt;a href="https://jira.spring.io/jira/secure/ReleaseNote.jspa?projectId=10121&amp;amp;version=15748"&gt;4.3.4&lt;/a&gt; and &lt;a href="https://jira.spring.io/jira/secure/ReleaseNote.jspa?projectId=10121&amp;amp;version=15712"&gt;4.2.11&lt;/a&gt; are now available, as well as Spring AMQP &lt;a href="https://jira.spring.io/jira/secure/ReleaseNote.jspa?projectId=10450&amp;amp;version=15718"&gt;1.6.3&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="paragraph"&gt;
&lt;p&gt;These include some important bug fixes and all users are encouraged to upgrade. Click on the release links above to see closed issues.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="paragraph"&gt;
&lt;p&gt;See the project pages for documentation, download information etc.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="ulist"&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="http://projects.spring.io/spring-integration/"&gt;Spring Integration Project Page&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="http://projects.spring.io/spring-amqp/"&gt;Spring AMQP Project Page&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;</content>
  </entry>
  <entry>
    <title>Spring Cloud Data Flow for Kubernetes 1.1 M1 and 1.0.1 GA released</title>
    <link rel="alternate" href="https://spring.io/blog/2016/10/03/spring-cloud-data-flow-for-kubernetes-1-1-m1-and-1-0-1-ga-released" />
    <category term="releases" label="Releases" />
    <author>
      <name>Thomas Risberg</name>
    </author>
    <id>tag:spring.io,2016-09-30:2643</id>
    <updated>2016-10-03T09:52:00Z</updated>
    <content type="html">&lt;p&gt;On behalf of the team, I am pleased to announce the release of the first milestone of Spring Cloud Data Flow for Kubernetes 1.1 along with a 1.0.1 maintenance release.&lt;/p&gt;
&lt;p&gt;Spring Cloud Data Flow for Kubernetes provides support for orchestrating long-running (streaming) and short-lived (task/batch) data microservices on Kubernetes.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Note:&lt;/em&gt; A great way to start using this new release(s) is to follow the &lt;a href="http://cloud.spring.io/spring-cloud-dataflow/#spring-cloud-data-flow-server-implementations"&gt;release matrix&lt;/a&gt; on the project page, which includes the download coordinates and the links to the reference guide.&lt;/p&gt;
&lt;p&gt;The most significant change for both of these releases is the way we handle task launching. We used to orchestrate them as a Job with associated Pods, but that proved problematic in terms of failed jobs getting restarted even with a RestartPolicy specified as &amp;ldquo;Never&amp;rdquo;. To resolve this, we now launch the tasks using &lt;a href="http://kubernetes.io/docs/user-guide/jobs/#bare-pods"&gt;bare pods&lt;/a&gt; and we also give each launched task and corresponding pod a unique id.&lt;/p&gt;
&lt;p&gt;The 1.1.0.M1 release builds on the recent &lt;a href="https://spring.io/blog/2016/09/16/spring-cloud-data-flow-1-1-m1-and-1-0-1-ga-released#1-1-m1-release"&gt;1.1 M1 release&lt;/a&gt; of the core Spring Cloud Data Flow project.&lt;/p&gt;
&lt;p&gt;The 1.0.1.RELEASE maintenance release builds on the latest &lt;a href="https://spring.io/blog/2016/09/16/spring-cloud-data-flow-1-1-m1-and-1-0-1-ga-released#1-0-1-ga-release"&gt;1.0.1 maintenance release&lt;/a&gt; of the core Spring Cloud Data Flow project.&lt;/p&gt;
&lt;p&gt;Review the &lt;a href="https://github.com/spring-cloud/spring-cloud-dataflow-server-kubernetes/milestone/5?closed=1"&gt;1.0.1.RELEASE marker&lt;/a&gt; and the &lt;a href="https://github.com/spring-cloud/spring-cloud-deployer-kubernetes/milestone/6?closed=1"&gt;Spring Cloud Deployer for Kubernetes 1.0.4.RELEASE marker&lt;/a&gt; to learn more about the incremental improvements. &lt;/p&gt;
&lt;p&gt;Docker images containing the &lt;em&gt;Spring Cloud Data Flow Server for Kubernetes&lt;/em&gt; for both of these releases are available from the &lt;a href="https://hub.docker.com/r/springcloud/spring-cloud-dataflow-server-kubernetes/tags/"&gt;Docker Hub repo&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;To get started using Spring Cloud Data Flow for Kubernetes &lt;a href="http://docs.spring.io/spring-cloud-dataflow-server-kubernetes/docs/1.0.1.RELEASE/reference/htmlsingle/#_getting_started"&gt;follow the steps&lt;/a&gt; outlined in the reference documentation.&lt;/p&gt;</content>
  </entry>
  <entry>
    <title>Spring Data Hopper SR4 and Gosling SR6 released</title>
    <link rel="alternate" href="https://spring.io/blog/2016/10/03/spring-data-hopper-sr4-and-gosling-sr6-released" />
    <category term="releases" label="Releases" />
    <author>
      <name>Oliver Gierke</name>
    </author>
    <id>tag:spring.io,2016-09-29:2642</id>
    <updated>2016-10-03T07:14:00Z</updated>
    <content type="html">&lt;p&gt;On behalf of the entire team I&amp;rsquo;d like to announce the availability of two service releases for Spring Data release trains: Hopper SR4 and Gosling SR6. The releases are recommended upgrades as they contain fixes for a &lt;a href="https://pivotal.io/security/cve-2016-6652"&gt;CVE in Spring Data JPA&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Spring Boot 1.3.8 and 1.4.1 users got Hopper SR3 and Gosling SR5 shipped out of the box. Those releases &lt;em&gt;also&lt;/em&gt; already contain the fixes for CVE but unfortunately broke Java 6 compatibility. To re-instantiate the latter, please upgrade to the latest ones by setting the &lt;code&gt;spring-data-releasetrain.version&lt;/code&gt; property to the corresponding value. Non-Boot users can just upgrade to the new &lt;a href="https://github.com/spring-projects/spring-data-examples/tree/master/bom"&gt;BOM&lt;/a&gt;. As usual, the next Spring Boot releases will pick up the improved fixes as part of their dependency upgrades.&lt;/p&gt;
&lt;p&gt;Here&amp;rsquo;s the content of the releases:&lt;/p&gt;&lt;h3&gt;&lt;a href="#spring-data-hopper-sr4" class="anchor" name="spring-data-hopper-sr4"&gt;&lt;/a&gt;Spring Data Hopper SR4&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;Spring Data Commons 1.12.4 - &lt;a href="https://repo.spring.io/libs-release/org/springframework/data/spring-data-commons/1.12.4.RELEASE"&gt;Artifacts&lt;/a&gt; - &lt;a href="http://docs.spring.io/spring-data/commons/docs/1.12.4.RELEASE/api"&gt;JavaDocs&lt;/a&gt; - &lt;a href="http://docs.spring.io/spring-data/commons/docs/1.12.4.RELEASE/reference/html"&gt;Documentation&lt;/a&gt; - &lt;a href="http://docs.spring.io/spring-data/commons/docs/1.12.4.RELEASE/changelog.txt"&gt;Changelog&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Spring Data JPA 1.10.4 - &lt;a href="https://repo.spring.io/libs-release/org/springframework/data/spring-data-jpa/1.10.4.RELEASE"&gt;Artifacts&lt;/a&gt; - &lt;a href="http://docs.spring.io/spring-data/jpa/docs/1.10.4.RELEASE/api"&gt;JavaDocs&lt;/a&gt; - &lt;a href="http://docs.spring.io/spring-data/jpa/docs/1.10.4.RELEASE/reference/html"&gt;Documentation&lt;/a&gt; - &lt;a href="http://docs.spring.io/spring-data/jpa/docs/1.10.4.RELEASE/changelog.txt"&gt;Changelog&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Spring Data KeyValue 1.1.4 - &lt;a href="https://repo.spring.io/libs-release/org/springframework/data/spring-data-keyvalue/1.1.4.RELEASE"&gt;Artifacts&lt;/a&gt; - &lt;a href="http://docs.spring.io/spring-data/keyvalue/docs/1.1.4.RELEASE/api"&gt;JavaDocs&lt;/a&gt; - &lt;a href="http://docs.spring.io/spring-data/keyvalue/docs/1.1.4.RELEASE/reference/html"&gt;Documentation&lt;/a&gt; - &lt;a href="http://docs.spring.io/spring-data/keyvalue/docs/1.1.4.RELEASE/changelog.txt"&gt;Changelog&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Spring Data for Apache Cassandra 1.4.4 - &lt;a href="https://repo.spring.io/libs-release/org/springframework/data/spring-data-cassandra/1.4.4.RELEASE"&gt;Artifacts&lt;/a&gt; - &lt;a href="http://docs.spring.io/spring-data/cassandra/docs/1.4.4.RELEASE/api"&gt;JavaDocs&lt;/a&gt; - &lt;a href="http://docs.spring.io/spring-data/cassandra/docs/1.4.4.RELEASE/reference/html"&gt;Documentation&lt;/a&gt; - &lt;a href="http://docs.spring.io/spring-data/cassandra/docs/1.4.4.RELEASE/changelog.txt"&gt;Changelog&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Spring Data for Apache Solr 2.0.4 - &lt;a href="https://repo.spring.io/libs-release/org/springframework/data/spring-data-solr/2.0.4.RELEASE"&gt;Artifacts&lt;/a&gt; - &lt;a href="http://docs.spring.io/spring-data/solr/docs/2.0.4.RELEASE/api"&gt;JavaDocs&lt;/a&gt; - &lt;a href="http://docs.spring.io/spring-data/solr/docs/2.0.4.RELEASE/reference/html"&gt;Documentation&lt;/a&gt; - &lt;a href="http://docs.spring.io/spring-data/solr/docs/2.0.4.RELEASE/changelog.txt"&gt;Changelog&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Spring Data Gemfire 1.8.4 - &lt;a href="https://repo.spring.io/libs-release/org/springframework/data/spring-data-gemfire/1.8.4.RELEASE"&gt;Artifacts&lt;/a&gt; - &lt;a href="http://docs.spring.io/spring-data/gemfire/docs/1.8.4.RELEASE/api"&gt;JavaDocs&lt;/a&gt; - &lt;a href="http://docs.spring.io/spring-data/gemfire/docs/1.8.4.RELEASE/reference/html"&gt;Documentation&lt;/a&gt; - &lt;a href="http://docs.spring.io/spring-data/gemfire/docs/1.8.4.RELEASE/changelog.txt"&gt;Changelog&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Spring Data Neo4j 4.1.4 - &lt;a href="https://repo.spring.io/libs-release/org/springframework/data/spring-data-neo4j/4.1.4.RELEASE"&gt;Artifacts&lt;/a&gt; - &lt;a href="http://docs.spring.io/spring-data/neo4j/docs/4.1.4.RELEASE/api"&gt;JavaDocs&lt;/a&gt; - &lt;a href="http://docs.spring.io/spring-data/neo4j/docs/4.1.4.RELEASE/reference/html"&gt;Documentation&lt;/a&gt; - &lt;a href="http://docs.spring.io/spring-data/neo4j/docs/4.1.4.RELEASE/changelog.txt"&gt;Changelog&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Spring Data MongoDB 1.9.4 - &lt;a href="https://repo.spring.io/libs-release/org/springframework/data/spring-data-mongodb/1.9.4.RELEASE"&gt;Artifacts&lt;/a&gt; - &lt;a href="http://docs.spring.io/spring-data/mongodb/docs/1.9.4.RELEASE/api"&gt;JavaDocs&lt;/a&gt; - &lt;a href="http://docs.spring.io/spring-data/mongodb/docs/1.9.4.RELEASE/reference/html"&gt;Documentation&lt;/a&gt; - &lt;a href="http://docs.spring.io/spring-data/mongodb/docs/1.9.4.RELEASE/changelog.txt"&gt;Changelog&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Spring Data Envers 1.0.4 - &lt;a href="https://repo.spring.io/libs-release/org/springframework/data/spring-data-envers/1.0.4.RELEASE"&gt;Artifacts&lt;/a&gt; - &lt;a href="http://docs.spring.io/spring-data/envers/docs/1.0.4.RELEASE/api"&gt;JavaDocs&lt;/a&gt; - &lt;a href="http://docs.spring.io/spring-data/envers/docs/1.0.4.RELEASE/reference/html"&gt;Documentation&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Spring Data REST 2.5.4 - &lt;a href="https://repo.spring.io/libs-release/org/springframework/data/spring-data-rest-webmvc/2.5.4.RELEASE"&gt;Artifacts&lt;/a&gt; - &lt;a href="http://docs.spring.io/spring-data/rest/docs/2.5.4.RELEASE/api"&gt;JavaDocs&lt;/a&gt; - &lt;a href="http://docs.spring.io/spring-data/rest/docs/2.5.4.RELEASE/reference/html"&gt;Documentation&lt;/a&gt; - &lt;a href="http://docs.spring.io/spring-data/rest/docs/2.5.4.RELEASE/changelog.txt"&gt;Changelog&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Spring Data Redis 1.7.4 - &lt;a href="https://repo.spring.io/libs-release/org/springframework/data/spring-data-redis/1.7.4.RELEASE"&gt;Artifacts&lt;/a&gt; - &lt;a href="http://docs.spring.io/spring-data/redis/docs/1.7.4.RELEASE/api"&gt;JavaDocs&lt;/a&gt; - &lt;a href="http://docs.spring.io/spring-data/redis/docs/1.7.4.RELEASE/reference/html"&gt;Documentation&lt;/a&gt; - &lt;a href="http://docs.spring.io/spring-data/redis/docs/1.7.4.RELEASE/changelog.txt"&gt;Changelog&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Spring Data Elasticsearch 2.0.4 - &lt;a href="https://repo.spring.io/libs-release/org/springframework/data/spring-data-elasticsearch/2.0.4.RELEASE"&gt;Artifacts&lt;/a&gt; - &lt;a href="http://docs.spring.io/spring-data/elasticsearch/docs/2.0.4.RELEASE/api"&gt;JavaDocs&lt;/a&gt; - &lt;a href="http://docs.spring.io/spring-data/elasticsearch/docs/2.0.4.RELEASE/reference/html"&gt;Documentation&lt;/a&gt; - &lt;a href="http://docs.spring.io/spring-data/elasticsearch/docs/2.0.4.RELEASE/changelog.txt"&gt;Changelog&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Spring Data Couchbase 2.1.4 - &lt;a href="https://repo.spring.io/libs-release/org/springframework/data/spring-data-couchbase/2.1.4.RELEASE"&gt;Artifacts&lt;/a&gt; - &lt;a href="http://docs.spring.io/spring-data/couchbase/docs/2.1.4.RELEASE/api"&gt;JavaDocs&lt;/a&gt; - &lt;a href="http://docs.spring.io/spring-data/couchbase/docs/2.1.4.RELEASE/reference/html"&gt;Documentation&lt;/a&gt; - &lt;a href="http://docs.spring.io/spring-data/couchbase/docs/2.1.4.RELEASE/changelog.txt"&gt;Changelog&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;h3&gt;&lt;a href="#spring-data-gosling-sr6" class="anchor" name="spring-data-gosling-sr6"&gt;&lt;/a&gt;Spring Data Gosling SR6&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;Spring Data Commons 1.11.6 - &lt;a href="https://repo.spring.io/libs-release/org/springframework/data/spring-data-commons/1.11.6.RELEASE"&gt;Artifacts&lt;/a&gt; - &lt;a href="http://docs.spring.io/spring-data/commons/docs/1.11.6.RELEASE/api"&gt;JavaDocs&lt;/a&gt; - &lt;a href="http://docs.spring.io/spring-data/commons/docs/1.11.6.RELEASE/reference/html"&gt;Documentation&lt;/a&gt; - &lt;a href="http://docs.spring.io/spring-data/commons/docs/1.11.6.RELEASE/changelog.txt"&gt;Changelog&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Spring Data JPA 1.9.6 - &lt;a href="https://repo.spring.io/libs-release/org/springframework/data/spring-data-jpa/1.9.6.RELEASE"&gt;Artifacts&lt;/a&gt; - &lt;a href="http://docs.spring.io/spring-data/jpa/docs/1.9.6.RELEASE/api"&gt;JavaDocs&lt;/a&gt; - &lt;a href="http://docs.spring.io/spring-data/jpa/docs/1.9.6.RELEASE/reference/html"&gt;Documentation&lt;/a&gt; - &lt;a href="http://docs.spring.io/spring-data/jpa/docs/1.9.6.RELEASE/changelog.txt"&gt;Changelog&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Spring Data KeyValue 1.0.6 - &lt;a href="https://repo.spring.io/libs-release/org/springframework/data/spring-data-keyvalue/1.0.6.RELEASE"&gt;Artifacts&lt;/a&gt; - &lt;a href="http://docs.spring.io/spring-data/keyvalue/docs/1.0.6.RELEASE/api"&gt;JavaDocs&lt;/a&gt; - &lt;a href="http://docs.spring.io/spring-data/keyvalue/docs/1.0.6.RELEASE/reference/html"&gt;Documentation&lt;/a&gt; - &lt;a href="http://docs.spring.io/spring-data/keyvalue/docs/1.0.6.RELEASE/changelog.txt"&gt;Changelog&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Spring Data for Apache Cassandra 1.3.6 - &lt;a href="https://repo.spring.io/libs-release/org/springframework/data/spring-data-cassandra/1.3.6.RELEASE"&gt;Artifacts&lt;/a&gt; - &lt;a href="http://docs.spring.io/spring-data/cassandra/docs/1.3.6.RELEASE/api"&gt;JavaDocs&lt;/a&gt; - &lt;a href="http://docs.spring.io/spring-data/cassandra/docs/1.3.6.RELEASE/reference/html"&gt;Documentation&lt;/a&gt; - &lt;a href="http://docs.spring.io/spring-data/cassandra/docs/1.3.6.RELEASE/changelog.txt"&gt;Changelog&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Spring Data for Apache Solr 1.5.6 - &lt;a href="https://repo.spring.io/libs-release/org/springframework/data/spring-data-solr/1.5.6.RELEASE"&gt;Artifacts&lt;/a&gt; - &lt;a href="http://docs.spring.io/spring-data/solr/docs/1.5.6.RELEASE/api"&gt;JavaDocs&lt;/a&gt; - &lt;a href="http://docs.spring.io/spring-data/solr/docs/1.5.6.RELEASE/reference/html"&gt;Documentation&lt;/a&gt; - &lt;a href="http://docs.spring.io/spring-data/solr/docs/1.5.6.RELEASE/changelog.txt"&gt;Changelog&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Spring Data Gemfire 1.7.6 - &lt;a href="https://repo.spring.io/libs-release/org/springframework/data/spring-data-gemfire/1.7.6.RELEASE"&gt;Artifacts&lt;/a&gt; - &lt;a href="http://docs.spring.io/spring-data/gemfire/docs/1.7.6.RELEASE/api"&gt;JavaDocs&lt;/a&gt; - &lt;a href="http://docs.spring.io/spring-data/gemfire/docs/1.7.6.RELEASE/reference/html"&gt;Documentation&lt;/a&gt; - &lt;a href="http://docs.spring.io/spring-data/gemfire/docs/1.7.6.RELEASE/changelog.txt"&gt;Changelog&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Spring Data Neo4j 3.4.6 - &lt;a href="https://repo.spring.io/libs-release/org/springframework/data/spring-data-neo4j/3.4.6.RELEASE"&gt;Artifacts&lt;/a&gt; - &lt;a href="http://docs.spring.io/spring-data/neo4j/docs/3.4.6.RELEASE/api"&gt;JavaDocs&lt;/a&gt; - &lt;a href="http://docs.spring.io/spring-data/neo4j/docs/3.4.6.RELEASE/reference/html"&gt;Documentation&lt;/a&gt; - &lt;a href="http://docs.spring.io/spring-data/neo4j/docs/3.4.6.RELEASE/changelog.txt"&gt;Changelog&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Spring Data MongoDB 1.8.6 - &lt;a href="https://repo.spring.io/libs-release/org/springframework/data/spring-data-mongodb/1.8.6.RELEASE"&gt;Artifacts&lt;/a&gt; - &lt;a href="http://docs.spring.io/spring-data/mongodb/docs/1.8.6.RELEASE/api"&gt;JavaDocs&lt;/a&gt; - &lt;a href="http://docs.spring.io/spring-data/mongodb/docs/1.8.6.RELEASE/reference/html"&gt;Documentation&lt;/a&gt; - &lt;a href="http://docs.spring.io/spring-data/mongodb/docs/1.8.6.RELEASE/changelog.txt"&gt;Changelog&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Spring Data REST 2.4.6 - &lt;a href="https://repo.spring.io/libs-release/org/springframework/data/spring-data-rest-webmvc/2.4.6.RELEASE"&gt;Artifacts&lt;/a&gt; - &lt;a href="http://docs.spring.io/spring-data/rest/docs/2.4.6.RELEASE/api"&gt;JavaDocs&lt;/a&gt; - &lt;a href="http://docs.spring.io/spring-data/rest/docs/2.4.6.RELEASE/reference/html"&gt;Documentation&lt;/a&gt; - &lt;a href="http://docs.spring.io/spring-data/rest/docs/2.4.6.RELEASE/changelog.txt"&gt;Changelog&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Spring Data Redis 1.6.6 - &lt;a href="https://repo.spring.io/libs-release/org/springframework/data/spring-data-redis/1.6.6.RELEASE"&gt;Artifacts&lt;/a&gt; - &lt;a href="http://docs.spring.io/spring-data/redis/docs/1.6.6.RELEASE/api"&gt;JavaDocs&lt;/a&gt; - &lt;a href="http://docs.spring.io/spring-data/redis/docs/1.6.6.RELEASE/reference/html"&gt;Documentation&lt;/a&gt; - &lt;a href="http://docs.spring.io/spring-data/redis/docs/1.6.6.RELEASE/changelog.txt"&gt;Changelog&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Spring Data Elasticsearch 1.3.6 - &lt;a href="https://repo.spring.io/libs-release/org/springframework/data/spring-data-elasticsearch/1.3.6.RELEASE"&gt;Artifacts&lt;/a&gt; - &lt;a href="http://docs.spring.io/spring-data/elasticsearch/docs/1.3.6.RELEASE/api"&gt;JavaDocs&lt;/a&gt; - &lt;a href="http://docs.spring.io/spring-data/elasticsearch/docs/1.3.6.RELEASE/reference/html"&gt;Documentation&lt;/a&gt; - &lt;a href="http://docs.spring.io/spring-data/elasticsearch/docs/1.3.6.RELEASE/changelog.txt"&gt;Changelog&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Spring Data Couchbase 1.4.6 - &lt;a href="https://repo.spring.io/libs-release/org/springframework/data/spring-data-couchbase/1.4.6.RELEASE"&gt;Artifacts&lt;/a&gt; - &lt;a href="http://docs.spring.io/spring-data/couchbase/docs/1.4.6.RELEASE/api"&gt;JavaDocs&lt;/a&gt; - &lt;a href="http://docs.spring.io/spring-data/couchbase/docs/1.4.6.RELEASE/reference/html"&gt;Documentation&lt;/a&gt; - &lt;a href="http://docs.spring.io/spring-data/couchbase/docs/1.4.6.RELEASE/changelog.txt"&gt;Changelog&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</content>
  </entry>
  <entry>
    <title>Spring Statemachine 1.2.0.M1 Released</title>
    <link rel="alternate" href="https://spring.io/blog/2016/09/29/spring-statemachine-1-2-0-m1-released" />
    <category term="releases" label="Releases" />
    <author>
      <name>Janne Valkealahti</name>
    </author>
    <id>tag:spring.io,2016-09-29:2641</id>
    <updated>2016-09-29T08:43:19Z</updated>
    <content type="html">&lt;p&gt;We’re pleased to announce a first milestone release of &lt;a href="http://projects.spring.io/spring-statemachine"&gt;Spring Statemachine 1.2.0.M1&lt;/a&gt;. Artifacts are available from &lt;a href="http://repo.spring.io/libs-milestone/org/springframework/statemachine/"&gt;Spring Repository&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;What we got into this first milestone:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;Usual bug fixes and small enhancements&lt;/li&gt;
  &lt;li&gt;Support for UML submachines&lt;/li&gt;
  &lt;li&gt;New Repository abstraction keeping machine configuration in an external repository&lt;/li&gt;
  &lt;li&gt;New support for state actions.&lt;/li&gt;
  &lt;li&gt;New transition error action concepts&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;There has been a support for complex state hierarchy from a day one but trouble was that everything had to be defined in a same state configuration. New submachine support adds a feature where a state can be associated with other machine which allows some level of re-use and makes configuration more clean.&lt;/p&gt;
&lt;p&gt;States can now have their own actions which are executed while being on a state. Execution happens after entry actions and before exit actions and can be cancelled if state exit happens before action completes.&lt;/p&gt;
&lt;p&gt;Common topic among enhacement requests has been to add ways to keep machine state configuration externally from a static configuration defined either via JavaConfig or imported UML sources. Base support for this has been out there starting from 1.1.0 release but its use has been relatively awkward. For this we added a new abstraction via Spring Data Repositories and first implementation supports JPA and there is a &lt;a href="http://docs.spring.io/spring-statemachine/docs/1.2.0.M1/reference/htmlsingle/#statemachine-examples-datajpa"&gt;JPA sample&lt;/a&gt; using embedded H2 database. Work we got into this first milestone is very basic(i.e. substates are not supported) but plan is to make it fully compatible with rest of a framework and add more OOB repository implementations(i.e. mongo/redis) in coming milestone releases.&lt;/p&gt;
&lt;p&gt;Full changes as usual are available from &lt;a href="https://github.com/spring-projects/spring-statemachine/blob/master/docs/src/info/changelog.txt"&gt;changelog&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Thank you for all who have contributed in any way either via Stack Overflow, GitHub Issues or other channels. Driving force for changes really has been a community and requests from it.&lt;/p&gt;</content>
  </entry>
  <entry>
    <title>This Week in Spring - September 27, 2016</title>
    <link rel="alternate" href="https://spring.io/blog/2016/09/27/this-week-in-spring-september-27-2016" />
    <category term="engineering" label="Engineering" />
    <author>
      <name>Josh Long</name>
    </author>
    <id>tag:spring.io,2016-09-27:2640</id>
    <updated>2016-09-27T19:08:07Z</updated>
    <content type="html">&lt;p&gt;Wow! It&amp;rsquo;s already almost October! This year has sure gone by quickly! &lt;/p&gt;
&lt;p&gt;Welcome to another installment of &lt;em&gt;This Week in Spring&lt;/em&gt;! This week I&amp;rsquo;m in the studio with &lt;a href="https://twitter.com/phillip_webb"&gt;Phil Webb&lt;/a&gt; recording the next installment of our &lt;a href="https://www.safaribooksonline.com/library/view/building-microservices-with/9780134192468/"&gt;Livelessons series on building Microservices with Spring Boot&lt;/a&gt;. It&amp;rsquo;s been a lot of fun so far and we&amp;rsquo;ve only just begun!&lt;/p&gt;
&lt;p&gt;Tonight, I hope you&amp;rsquo;ll join me for &lt;a href="https://virtualjug.com/vjug24-session-cloud-native-java-by-josh-long/"&gt;Cloud Native Java&lt;/a&gt; on the vJUG&amp;rsquo;s worldwide and live event going on in timezones all around the world!&lt;/p&gt;
&lt;p&gt;We&amp;rsquo;ve got &lt;em&gt;so much&lt;/em&gt; to cover, so let&amp;rsquo;s get to it!&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;Spring lead Juergen Hoeller just announced Spring Framework 5.0.M2, another major step on the journey to Spring 5! &lt;a href="https://spring.io/blog/2016/09/21/spring-framework-5-0-m2-released"&gt;This release includes the functional endpoint mechanism for Spring MVC, as well&lt;/a&gt;!&lt;/li&gt;
  &lt;li&gt;Hurray! Reactor 3.0 is out! Get the latest bits and &lt;a href="https://spring.io/blog/2016/09/27/ready-your-java-8-reactive-apps-now-reactor-3-0-ga-is-out"&gt;see why Reactor underpins Spring Framework 5&amp;rsquo;s Reactive Runtime&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Check out Spring reactive ninja Arjen Poutsma&amp;rsquo;s new look at the &lt;a href="https://spring.io/blog/2016/09/22/new-in-spring-5-functional-web-framework"&gt;functional endpoint mechanism in Spring Framework 5&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Spring Cloud ninja Spencer Gibb &lt;a href="https://spring.io/blog/2016/09/26/spring-cloud-camden-release-and-brixton-sr6-are-available"&gt;has just announced Spring Cloud Camden.RELEASE and Spring Cloud Brixton.SR6&lt;/a&gt;! Spring Cloud Camden is &lt;em&gt;packed&lt;/em&gt; with good stuff, including the new Spring Cloud Contract effort! Get it while it&amp;rsquo;s hot!&lt;/li&gt;
  &lt;li&gt;Spring Integration Java DSL lead Artem Bilan just &lt;a href="https://spring.io/blog/2016/09/27/java-dsl-for-spring-integration-1-2-release-candidate-1-is-available"&gt;announced that the Spring Integration Java DSL 1.2 RC1 is now available&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;check out this SpringOne Platform replay of Rossen Stoyanchev&amp;rsquo;s &lt;a href="https://spring.io/blog/2016/09/26/springone-platform-2016-replay-spring-mvc-4-web-apps"&gt;excellent look at Spring MVC in 4.3&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;check out this SpringOne Platform replay of a look &lt;a href="https://spring.io/blog/2016/09/26/springone-platform-2016-replay-cloud-native-java-with-spring-cloud-services"&gt;at Spring Cloud Services from Craig Walls and Roy Clarkson&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Spring and data ninja Thomas Risberg&amp;rsquo;s &lt;a href="https://spring.io/blog/2016/09/26/spring-cloud-data-flow-for-apache-mesos-1-0-ga-released"&gt;just announced Spring Cloud Data Flow for Apache Mesos 1.0.GA&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Spring Cloud Contract lead Marcin Grzejszczak announced the &lt;a href="https://spring.io/blog/2016/09/23/spring-cloud-contract-1-0-0-release-is-available"&gt;1.0.0.RELEASE of Spring Cloud Contract in the runup to Spring Cloud Camden itself&lt;/a&gt;. Spring Cloud Contract is a &lt;em&gt;must-see&lt;/em&gt; addition to the Spring Cloud portfolio that makes it easy for service providers and service consumers to stay on the same page and to build (and test!) with confidence that the implied contract between nodes is unbroken.&lt;/li&gt;
  &lt;li&gt;Spring Security lead Rob Winch has &lt;a href="https://spring.io/blog/2016/09/23/spring-security-4-2-m1"&gt;just announced Spring Security 4.2.M1&lt;/a&gt;, which closes out 50+ issues and has a lot of other improvements&lt;/li&gt;
  &lt;li&gt;in the run up to Spring Cloud Camden, Marius Bogoevici just &lt;a href="https://spring.io/blog/2016/09/23/spring-cloud-stream-brooklyn-release-is-available"&gt;announced Spring Cloud Stream Brooklyn, which makes it easy to build messaging-based microservcies&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Spring Data ninja Janne Valkealahti just &lt;a href="https://spring.io/blog/2016/09/22/spring-cloud-data-flow-for-apache-yarn-1-0-2-released"&gt;announced Spring Cloud Data Flow for Apache YARN 1.0.2&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Spring Platform lead Andy Wilkinson&amp;rsquo;s &lt;a href="https://spring.io/blog/2016/09/22/spring-io-platform-athens-release"&gt;just announced Spring IO Platform Athens&lt;/a&gt; and &lt;a href="https://spring.io/blog/2016/09/22/spring-io-platform-2-0-8-release"&gt;Spring IO Platform 2.0.8&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Spring Boot ninja Stéphane Nicoll &lt;a href="https://spring.io/blog/2016/09/21/spring-boot-1-4-1-and-1-3-8-available-now"&gt;just announced Spring Boot 1.4.1. and 1.3.8&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Atomist founder and Spring founder Rod Johnson has an interesting post up on &lt;a href="https://medium.com/the-composition/software-that-writes-and-evolves-software-953578a6fc36#.1fb657dhh"&gt;how his company&amp;rsquo;s technology can be used to automate code edits&lt;/a&gt; to facilitate upgrading codebases. His example, of course, is in terms of Spring Cloud and - in particular - Hystrix.&lt;/li&gt;
&lt;/ul&gt;</content>
  </entry>
  <entry>
    <title>Java DSL for Spring Integration 1.2 Release Candidate 1 is available</title>
    <link rel="alternate" href="https://spring.io/blog/2016/09/27/java-dsl-for-spring-integration-1-2-release-candidate-1-is-available" />
    <category term="releases" label="Releases" />
    <author>
      <name>Artem Bilan</name>
    </author>
    <id>tag:spring.io,2016-09-27:2639</id>
    <updated>2016-09-27T19:02:45Z</updated>
    <content type="html">&lt;div class="paragraph"&gt;
&lt;p&gt;Dear Spring Community,&lt;/p&gt;
&lt;/div&gt;
&lt;div class="paragraph"&gt;
&lt;p&gt;I&amp;#8217;m pleased to announce that the Java DSL for Spring Integration &lt;code&gt;1.2 RC1&lt;/code&gt; is available now.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="paragraph"&gt;
&lt;p&gt;Since the previous &lt;a href="https://spring.io/blog/2016/09/15/java-dsl-for-spring-integration-1-2-milestone-2-is-available"&gt;Milestone 2&lt;/a&gt; we had a good deep feedback for our new features and some API has been broken to reflect real requirements.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="paragraph"&gt;
&lt;p&gt;As usual, big thanks to everyone who created issues, raised Pull Requests, provided feedback or just asked questions on StackOverflow.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="paragraph"&gt;
&lt;p&gt;The artifact &lt;code&gt;org.springframework.integration:spring-integration-java-dsl:1.2.0.RC1&lt;/code&gt; is available in the &lt;a href="http://repo.spring.io/milestone"&gt;Milestone repo&lt;/a&gt;.
So, give it a shot for last chance to raise a &lt;a href="https://github.com/spring-projects/spring-integration-java-dsl/issues"&gt;GH issue&lt;/a&gt; for any feedback!&lt;/p&gt;
&lt;/div&gt;
&lt;div class="paragraph"&gt;
&lt;p&gt;Now about the changes in the &lt;code&gt;1.2 RC1&lt;/code&gt;:&lt;/p&gt;
&lt;/div&gt;
&lt;h1 id="poller-code-errorchannel-code" class="sect0"&gt;&lt;a class="anchor" href="#poller-code-errorchannel-code"&gt;&lt;/a&gt;Poller &lt;code&gt;errorChannel&lt;/code&gt;&lt;/h1&gt;
&lt;div class="paragraph"&gt;
&lt;p&gt;We can now specify &lt;code&gt;errorChannel&lt;/code&gt; on the Poller definition.
Previously we had to configure entire, separate &lt;code&gt;MessagePublishingErrorHandler&lt;/code&gt;:&lt;/p&gt;
&lt;/div&gt;
&lt;div class="listingblock"&gt;
&lt;div class="content"&gt;
&lt;pre class="prettyprint highlight"&gt;&lt;code class="language-java" data-lang="java"&gt;e -&amp;gt; e.poller(Pollers.fixedDelay(100)
     .errorChannel(filePollingErrorChannel())&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="paragraph"&gt;
&lt;p&gt;Instead of:&lt;/p&gt;
&lt;/div&gt;
&lt;div class="listingblock"&gt;
&lt;div class="content"&gt;
&lt;pre class="prettyprint highlight"&gt;&lt;code class="language-java" data-lang="java"&gt;@Bean
public ErrorHandler filePollingErrorHandler() {
    MessagePublishingErrorHandler errorHandler =
                               new MessagePublishingErrorHandler();
    errorHandler.setDefaultErrorChannel(filePollingErrorChannel());
    return errorHandler;
}
...
e -&amp;gt; e.poller(Pollers.fixedDelay(100)
    .errorHandler(filePollingErrorHandler())&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="paragraph"&gt;
&lt;p&gt;After introduction &lt;a href="https://jira.spring.io/browse/INT-4113"&gt;late-binding&lt;/a&gt; support for the &lt;code&gt;MessagePublishingErrorHandler&lt;/code&gt; in Spring Integration Core, that will be even easier just with the bean name for the &lt;code&gt;MessageChannel&lt;/code&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;h1 id="filesplitter-improvements" class="sect0"&gt;&lt;a class="anchor" href="#filesplitter-improvements"&gt;&lt;/a&gt;FileSplitter improvements&lt;/h1&gt;
&lt;div class="paragraph"&gt;
&lt;p&gt;&lt;code&gt;Files.splitter()&lt;/code&gt; spec now provides more options to configure underlying &lt;code&gt;FileSplitter&lt;/code&gt;:&lt;/p&gt;
&lt;/div&gt;
&lt;div class="listingblock"&gt;
&lt;div class="content"&gt;
&lt;pre class="prettyprint highlight"&gt;&lt;code class="language-java" data-lang="java"&gt;.split(Files.splitter()
    .markers(false)
    .applySequence(true)
    .charset("UTF-8"))&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;h1 id="integrationflowregistration" class="sect0"&gt;&lt;a class="anchor" href="#integrationflowregistration"&gt;&lt;/a&gt;IntegrationFlowRegistration&lt;/h1&gt;
&lt;div class="paragraph"&gt;
&lt;p&gt;The manual flow registration process has undergone some improvements:&lt;/p&gt;
&lt;/div&gt;
&lt;div class="ulist"&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;an &lt;code&gt;IntegrationFlowRegistrationBuilder&lt;/code&gt; is returned from the &lt;code&gt;IntegrationFlowContext.registration(IntegrationFlow)&lt;/code&gt; for providing more options during registration &lt;code&gt;IntegrationFlow&lt;/code&gt; bean and all dependent components;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;an &lt;code&gt;IntegrationFlowRegistration&lt;/code&gt; is a result of &lt;code&gt;IntegrationFlowRegistrationBuilder.register()&lt;/code&gt; call.
This object provides some useful &lt;code&gt;IntegrationFlow&lt;/code&gt; properties and lets to control the lifecycle of &lt;code&gt;IntegrationFlow&lt;/code&gt; associated with it;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;you can now add additional beans to register, required by the provided &lt;code&gt;IntegrationFlow&lt;/code&gt;.
For example &lt;code&gt;DefaultFtpSessionFactory&lt;/code&gt; is required by the &lt;code&gt;Ftp.outboundAdapter()&lt;/code&gt;.
They are destroyed and removed from &lt;code&gt;ApplicationContext&lt;/code&gt; together with the &lt;code&gt;IntegrationFlow&lt;/code&gt; they are associated.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="listingblock"&gt;
&lt;div class="content"&gt;
&lt;pre class="prettyprint highlight"&gt;&lt;code class="language-java" data-lang="java"&gt;this.integrationFlowContext.registration(myFlow)
        .id("myFlow")
        .autoStartup(false)
        .addBean(new Foo())
        .addBean("bar", new Bar())
        .register();&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="paragraph"&gt;
&lt;p&gt;See &lt;a href="https://spring.io/team/grussell"&gt;Gary Russell&lt;/a&gt;'s amazing &lt;a href="https://github.com/spring-projects/spring-integration-samples/tree/master/advanced/dynamic-tcp-client"&gt;Sample&lt;/a&gt; about dynamic TCP Clients for more information.&lt;/p&gt;
&lt;/div&gt;
&lt;h1 id="apache-kafka-support" class="sect0"&gt;&lt;a class="anchor" href="#apache-kafka-support"&gt;&lt;/a&gt;Apache Kafka support&lt;/h1&gt;
&lt;div class="paragraph"&gt;
&lt;p&gt;We decided to drop Apache Kafka &lt;code&gt;0.8.x&lt;/code&gt; support (Spring Integration for Apache Kafka &lt;code&gt;1.3.x&lt;/code&gt;) in favor of Apache Kafka &lt;code&gt;0.9.x&lt;/code&gt; and &lt;code&gt;0.10.x&lt;/code&gt;.
The recently introduced &lt;code&gt;Kafka09&lt;/code&gt; has been deleted and its content has been moved to the &lt;code&gt;Kafka&lt;/code&gt; factory.
And now the dependency on the matter is Spring Integration for Apache Kafka &lt;code&gt;2.1.x&lt;/code&gt;, based on the Spring for Apache Kafka &lt;code&gt;1.1.x&lt;/code&gt; to provide Apache Kafka &lt;code&gt;0.10.x&lt;/code&gt;.
Meanwhile the same &lt;code&gt;Kafka&lt;/code&gt; DSL factory and dependent components can be used with the previous Spring Integration for Apache Kafka &lt;code&gt;2.0.x&lt;/code&gt; version on classpath.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="paragraph"&gt;
&lt;p&gt;Apache Kafka &lt;code&gt;0.8.x&lt;/code&gt; support can be achieved through the direct Spring Integration for Apache Kafka &lt;code&gt;1.3.x&lt;/code&gt; adapters usage.
Or you can simply copy/paste &lt;code&gt;org.springframework.integration.dsl.kafka&lt;/code&gt; &lt;a href="https://github.com/spring-projects/spring-integration-java-dsl/tree/1.1.x/src/main/java/org/springframework/integration/dsl/kafka"&gt;package&lt;/a&gt; from Java DSL &lt;code&gt;1.1&lt;/code&gt; to your project and continue to get a gain from fluent builder API of &lt;code&gt;Kafka&lt;/code&gt; factory!&lt;/p&gt;
&lt;/div&gt;
&lt;h1 id="next-steps" class="sect0"&gt;&lt;a class="anchor" href="#next-steps"&gt;&lt;/a&gt;Next Steps&lt;/h1&gt;
&lt;div class="paragraph"&gt;
&lt;p&gt;We expect to have General Availability for version &lt;code&gt;1.2&lt;/code&gt; in about a week.
After that &lt;code&gt;spring-integration-java-dsl&lt;/code&gt; will definitely move to the &lt;a href="http://projects.spring.io/spring-integration/"&gt;Spring Integration Core&lt;/a&gt; &lt;code&gt;5.0&lt;/code&gt; and Java 8 code base.
The current &lt;code&gt;1.2&lt;/code&gt; version will be still supported, but just for bug fixes.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="paragraph"&gt;
&lt;p&gt;&lt;a href="https://github.com/spring-projects/spring-integration-java-dsl"&gt;Project Page&lt;/a&gt; | &lt;a href="https://github.com/spring-projects/spring-integration-java-dsl/wiki/Spring-Integration-Java-DSL-Reference"&gt;Documentation&lt;/a&gt; | &lt;a href="https://github.com/spring-projects/spring-integration-java-dsl/issues"&gt;Issues&lt;/a&gt; | &lt;a href="http://stackoverflow.com/questions/tagged/spring-integration"&gt;Help&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;</content>
  </entry>
  <entry>
    <title>Ready your Java 8 Reactive apps now, Reactor 3.0 GA is out !</title>
    <link rel="alternate" href="https://spring.io/blog/2016/09/27/ready-your-java-8-reactive-apps-now-reactor-3-0-ga-is-out" />
    <category term="releases" label="Releases" />
    <author>
      <name>Stephane Maldini</name>
    </author>
    <id>tag:spring.io,2016-09-19:2621</id>
    <updated>2016-09-27T08:00:00Z</updated>
    <content type="html">&lt;p&gt;After more &lt;a href="https://spring.io/blog/2016/02/16/reactor-2-5-a-second-generation-reactive-foundation-for-the-jvm"&gt;than a year of work&lt;/a&gt;, &lt;a href="https://spring.io/blog/2016/03/11/reactor-core-3-0-becomes-a-unified-reactive-foundation-on-java-8"&gt;multiple milestones&lt;/a&gt; and fine tuning based on much feedback, I have the pleasure of announcing Reactor 3 General Availability. You will find Reactor Core 3.0.2.RELEASE on Maven Central.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://gitter.im/reactor/reactor?utm_source=badge&amp;utm_medium=badge&amp;utm_campaign=pr-badge&amp;utm_content=badge"&gt;&lt;img src="https://badges.gitter.im/Join%20Chat.svg" alt="Join the chat at https://gitter.im/reactor/reactor" /&gt;&lt;/a&gt; &lt;a href="http://mvnrepository.com/artifact/io.projectreactor/reactor-core"&gt;&lt;img src="https://maven-badges.herokuapp.com/maven-central/io.projectreactor/reactor-core/badge.svg?style=plastic" alt="Reactor Core" /&gt;&lt;/a&gt; &lt;/p&gt;&lt;h2&gt;&lt;a href="#what-is-reactor-3" class="anchor" name="what-is-reactor-3"&gt;&lt;/a&gt;What is Reactor 3 ?&lt;/h2&gt;
&lt;p&gt;Reactor 3 provides a powerful and efficient &lt;a href="http://reactive-streams.org"&gt;reactive&lt;/a&gt; programming model for Java 8 based applications. The model builds upon the experience of both &lt;em&gt;Reactor 2&lt;/em&gt; and &lt;em&gt;RxJava 1&lt;/em&gt; and introduces a fluent way to compose asynchronous backpressure-ready event processing. &lt;a href="https://spring.io/blog/2016/07/28/reactive-programming-with-spring-5-0-m1"&gt;Spring Framework 5 uses Reactor 3&lt;/a&gt; to build and eventually expose a &lt;a href="https://spring.io/blog/2016/09/22/new-in-spring-5-functional-web-framework"&gt;complete reactive story&lt;/a&gt;. &lt;/p&gt;
&lt;p&gt;Its design relies on an extensible execution model that favors event processing colocation. Typically, Reactor will be jumping threads between event flow stages only when explicitly asked so. For instance, in-memory operations such as list access or payload transformation do not usually require a thread boundary. If the operation producer or receiver might take time, users are expected to operate their flow with &lt;code&gt;Flux#publishOn&lt;/code&gt; / &lt;code&gt;Mono#publishOn&lt;/code&gt; or &lt;code&gt;Flux#subscribeOn&lt;/code&gt; / &lt;code&gt;Mono#subscribeOn&lt;/code&gt; and choose a &lt;a href="http://projectreactor.io/core/docs/api/reactor/core/scheduler/Schedulers.html"&gt;Scheduler&lt;/a&gt; to run on. Alternatively, if a user is combining the results of many &lt;code&gt;Publisher&lt;/code&gt; as with &lt;em&gt;merge&lt;/em&gt; or &lt;em&gt;concat&lt;/em&gt;, Reactor will implicitly deal in a thread-safe way with various potential thread boundaries. In effect a flow stage hosted by a &lt;code&gt;Publisher&lt;/code&gt; might be traversed by a producing and a receiving thread at least.&lt;/p&gt;
&lt;p&gt;All of this is implemented in compliance with the behaviors defined by the &lt;a href="https://github.com/reactive-streams/reactive-streams-jvm"&gt;Reactive Streams specification&lt;/a&gt;. Reactor works at making the spec a commodity for library writers or Spring developers with pre-made operators you would apply in a streaming and/or asynchronous scenario.&lt;/p&gt;&lt;h2&gt;&lt;a href="#mono-and-flux" class="anchor" name="mono-and-flux"&gt;&lt;/a&gt;Mono and Flux&lt;/h2&gt;
&lt;p&gt;A flow definition is what Reactor calls a chain of &lt;a href="http://projectreactor.io/core/docs/api/reactor/core/publisher/Flux.html"&gt;Flux&lt;/a&gt; or &lt;a href="http://projectreactor.io/core/docs/api/reactor/core/publisher/Mono.html"&gt;Mono&lt;/a&gt; depending on the volume flowing into the defined stream. These types implement Reactive Streams &lt;code&gt;Publisher&lt;/code&gt; at every stage and can be passed around generically. Why &lt;em&gt;two&lt;/em&gt; reactive types then ? Because the cardinality matters to Reactor. A &lt;code&gt;Flux&lt;/code&gt; will observe 0 to N items and eventually terminate successfully or not. A &lt;code&gt;Mono&lt;/code&gt; will observe 0 or 1 item, with &lt;code&gt;Mono&amp;lt;Void&amp;gt;&lt;/code&gt; hinting at most 0 item.&lt;/p&gt;
&lt;p&gt;Let&amp;rsquo;s look at the following blocking API :&lt;/p&gt;
&lt;pre&gt;&lt;code class="prettyprint java"&gt;interface BlockingUserRepository {&#xD;
     User get(String id);&#xD;
     List&amp;lt;User&amp;gt; findAll();&#xD;
     void save(User data) throws RepositoryException;&#xD;
     List&amp;lt;User&amp;gt; findAllByUsernameLike(String s);&#xD;
}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Using plain Reactive Streams &lt;code&gt;Publisher&lt;/code&gt;, we would get the following contract :&lt;/p&gt;
&lt;pre&gt;&lt;code class="prettyprint java"&gt;interface ReactiveUserRepository {&#xD;
     Publisher&amp;lt;User&amp;gt; get(String id);&#xD;
     Publisher&amp;lt;User&amp;gt; findAll();&#xD;
     Publisher&amp;lt;Void&amp;gt; save(Publisher&amp;lt;? extends User&amp;gt; source);&#xD;
     Publisher&amp;lt;User&amp;gt; findAllByUsernameLike(String s);&#xD;
}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;But with Reactor we can keep semantic evidence of the intended cardinality :&lt;/p&gt;
&lt;pre&gt;&lt;code class="prettyprint java"&gt;interface ReactorUserRepository {&#xD;
     Mono&amp;lt;User&amp;gt; get(String id);&#xD;
     Flux&amp;lt;User&amp;gt; findAll();&#xD;
     Mono&amp;lt;Void&amp;gt; save(Publisher&amp;lt;? extends User&amp;gt; source);&#xD;
     Flux&amp;lt;User&amp;gt; findAllByUsernameLike(String s);&#xD;
}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Since both &lt;code&gt;Mono&lt;/code&gt; and &lt;code&gt;Flux&lt;/code&gt; implement &lt;code&gt;Publisher&lt;/code&gt; we can easily pass any reference of them as &lt;em&gt;Reactive data source&lt;/em&gt; while returning explicit semantics with &lt;code&gt;Mono&amp;lt;Void&amp;gt;&lt;/code&gt; fluent API :&lt;/p&gt;
&lt;pre&gt;&lt;code class="prettyprint java"&gt;// ReactorUserRepository userRepository;&#xD;
&#xD;
userRepository.save(Mono.fromCallable(() -&amp;gt; new User(&amp;quot;thomas&amp;quot;)))&#xD;
              .doOnSuccess(res -&amp;gt; success())&#xD;
              .subscribe();&#xD;
&#xD;
userRepository.save(Flux.just(new User(&amp;quot;bob&amp;quot;), new User(&amp;quot;robert&amp;quot;)))&#xD;
              .doOnSuccess(res -&amp;gt; success())&#xD;
              .subscribe();
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Keep in mind that &lt;code&gt;Flux&lt;/code&gt; and &lt;code&gt;Mono&lt;/code&gt; are meant for data producers that might take time. To manage reentrance and thread safety, operators must sometimes add some overhead in the executed flow. Still, efficiency is a core focus and we are getting regular reports from our engine contributor David Karnok. Reactor 3 is currenly one of the most &lt;a href="https://github.com/akarnokd/akarnokd-misc/issues/2"&gt;efficient&lt;/a&gt; reactive library on the JVM. In addition to these directly related benchmarks, we now benefit from RxJava 2 community feedback as well since it conceptually derives from the same smith and forge: &lt;a href="http://github.com/reactor/reactive-streams-commons"&gt;Reactive Streams Commons&lt;/a&gt;.&lt;/p&gt;&lt;h2&gt;&lt;a href="#what-rsquo-s-next" class="anchor" name="what-rsquo-s-next"&gt;&lt;/a&gt;What&amp;rsquo;s next ?&lt;/h2&gt;
&lt;p&gt;We are working on 3.0.3 for the next immediate weeks and we keep in sync with the latest needs from Spring 5, CloudFoundry and latest research from Reactive Streams Commons.&lt;/p&gt;
&lt;p&gt;In priority we will address:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;
  &lt;p&gt;New Testing support: Reactor 3 was scheduled with testing support, however initial feedbacks raised a few user experience issues. We are now working on delivering that missing bit. Meanwhile, users can easily duplicate the isolated &lt;a href="https://github.com/reactor/reactor-core/blob/master/src/test/java/reactor/test/TestSubscriber.java"&gt;TestSubscriber&lt;/a&gt; from our test for their needs.&lt;/p&gt;&lt;/li&gt;
  &lt;li&gt;
  &lt;p&gt;Guidance: While Reactor 3 is becoming increasingly popular, we are still working with a lot of human interaction internally or externally, power user with Rx knowledge and the &lt;a href="https://github.com/reactor/lite-rx-api-hands-on"&gt;quick tutorial&lt;/a&gt; contributed by &lt;a href="https://twitter.com/sdeleuze"&gt;Sebastien Deleuze&lt;/a&gt;. You will find more resources at the end of this post but we have started establishing some end-to-end scenarios that we find concrete, valuable and will help shaping an official reference reactor guide.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;h2&gt;&lt;a href="#reactor-ipc" class="anchor" name="reactor-ipc"&gt;&lt;/a&gt;Reactor IPC&lt;/h2&gt;
&lt;p&gt;IPC stands for Inter-Process Communication and Reactor IPC is an ongoing initiative to answer the question &amp;ldquo;how to get away from the JVM in a Reactive Streams fashion&amp;rdquo;. We are working on an initial set of implementations with &lt;a href="https://github.com/reactor/reactor-kafka"&gt;Reactor Kafka&lt;/a&gt;, &lt;a href="https://github.com/reactor/reactor-aeron"&gt;Reactor Aeron&lt;/a&gt; &amp;amp; &lt;a href="https://github.com/reactor/reactor-netty"&gt;Reactor Netty&lt;/a&gt;. In fact a lot of things is going on right now with contract redesign and Reactor Kafka/Netty work that support some of the new Spring reactive stories. The intent of the IPC umbrella is not to create new web or messaging frameworks but reactive drivers applications or libraries alike can build on. They transform a given runtime input/output in &lt;code&gt;Flux&lt;/code&gt; and &lt;code&gt;Mono&lt;/code&gt; or &lt;code&gt;Subscriber&lt;/code&gt;, propagating reactive backpressure up to the IO access layer. Expect a lot of news about these initiatives over the coming months.&lt;/p&gt;&lt;h2&gt;&lt;a href="#credits" class="anchor" name="credits"&gt;&lt;/a&gt;Credits&lt;/h2&gt;
&lt;p&gt;Let&amp;rsquo;s take some time to credit the people behind this release. &lt;a href="http://twitter.com/akarnokd"&gt;David Karnok&lt;/a&gt; is the main architect of the new Reactor engine and leads &lt;a href="http://github.com/reactor/reactive-streams-commons"&gt;Reactive Streams Commons&lt;/a&gt; research effort. Spring, Eclipse STS and CloudFoundry Client teams were instrumental in contributing design improvements and feedbacks as well. Beyond Pivotal, MuleSoft has been massively helpful and proactive about the latest development.&lt;/p&gt;
&lt;p&gt;&lt;a href="http://reactivex.io"&gt;RxJava 1&lt;/a&gt; brought mainstream Reactive to the JVM and its complete functional Rx algebra has become an industrial-standard which we align with. It inspired the game-changing specification we implement with &lt;a href="http://reactive-streams.org"&gt;Reactive Streams&lt;/a&gt; and brought together JVM key players such as Netflix, Oracle, Pivotal, Typesafe, Red Hat and many more.&lt;/p&gt;&lt;h2&gt;&lt;a href="#resources" class="anchor" name="resources"&gt;&lt;/a&gt;Resources&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href="http://www.slideshare.net/StphaneMaldini/reactor-30-a-reactive-foundation-for-java-8-and-spring"&gt;Reactor 3 overview&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://github.com/reactor/lite-rx-api-hands-on"&gt;Hands-On&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://spring.io/blog/2016/04/19/understanding-reactive-types"&gt;Understanding Reactive Types&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://github.com/sdeleuze/spring-reactive-playground"&gt;Reactor + Spring 5&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://github.com/viniciusccarvalho/spring-cloud-stream-ema-processor"&gt;Reactor + Spring Cloud Stream&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://spring.io/team/dsyer"&gt;Dave Syer&lt;/a&gt; reactive series &lt;a href="https://spring.io/blog/2016/06/07/notes-on-reactive-programming-part-i-the-reactive-landscape"&gt;part I&lt;/a&gt;, &lt;a href="https://spring.io/blog/2016/06/13/notes-on-reactive-programming-part-ii-writing-some-code"&gt;part II&lt;/a&gt; &amp;amp; &lt;a href="https://spring.io/blog/2016/07/20/notes-on-reactive-programming-part-iii-a-simple-http-server-application"&gt;part III&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Implementor Use Case : &lt;a href="https://github.com/cloudfoundry/cf-java-client"&gt;CloudFoundry Java Client&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="http://projectreactor.io"&gt;Public site&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="http://github.com/reactor"&gt;Github Org&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Stay tuned for more reactive stories ! The Reactor journey at Pivotal is only getting started, after much effort and research these past years we are excited to deliver a new experience. Our value proposition is directly correlated to Spring OSS, we have a unique opportunity to deliver reactive pipelines in an end-to-end fashion across all Spring portfolio. &lt;/p&gt;
&lt;p&gt;To conclude, Spring and Reactor are praising our community, you, for the enormous support, encouragements and feedbacks. The feedback loop we have established for years is more than a nice pragmatic collaboration, it&amp;rsquo;s what we all need to transform our industry step by step.&lt;/p&gt;</content>
  </entry>
  <entry>
    <title>Spring Cloud Camden.RELEASE and Brixton.SR6 are available</title>
    <link rel="alternate" href="https://spring.io/blog/2016/09/26/spring-cloud-camden-release-and-brixton-sr6-are-available" />
    <category term="releases" label="Releases" />
    <author>
      <name>Spencer Gibb</name>
    </author>
    <id>tag:spring.io,2016-09-26:2638</id>
    <updated>2016-09-26T22:13:00Z</updated>
    <content type="html">&lt;p&gt;On behalf of the team, I am happy to announce the general availability of the &lt;a href="https://cloud.spring.io"&gt;Spring Cloud Camden&lt;/a&gt; Release Train along with Service Release 6 of Brixton. &lt;code&gt;Camden.RELEASE&lt;/code&gt; can be found in our &lt;a href="https://repo.spring.io/release/"&gt;Spring Release&lt;/a&gt; repository. You can check out the Camden &lt;a href="https://github.com/spring-projects/spring-cloud/wiki/Spring-Cloud-Camden-Release-Notes"&gt;release notes for more information&lt;/a&gt;. &lt;code&gt;Brixton.SR6&lt;/code&gt; is largely a &lt;a href="https://github.com/spring-projects/spring-cloud/wiki/Spring-Cloud-Brixton-Release-Notes"&gt;bug-fix release&lt;/a&gt; and is recommended for use with the Brixton Release Train.&lt;/p&gt;&lt;h2&gt;&lt;a href="#highlights-of-the-camden-release-train" class="anchor" name="highlights-of-the-camden-release-train"&gt;&lt;/a&gt;Highlights of the Camden Release Train&lt;/h2&gt;
&lt;p&gt;Spring Cloud Contract is a new project that provides support for Consumer Driven Contracts and service schemas in Spring applications. Spring Cloud Netflix supports customization of Ribbon component classes via properties, uses the new community-maintained &lt;a href="https://github.com/OpenFeign/feign"&gt;OpenFeign&lt;/a&gt; and includes various fixes and improvements to Zuul. Spring Cloud Consul adds support for Spring Cloud Bus using Consul&amp;rsquo;s event API. The CLI adds a &lt;code&gt;spring cloud&lt;/code&gt; command to start various Spring Cloud servers with a single command. Supported servers include Eureka, Config Server and Hystrix Dashboard.&lt;/p&gt;
&lt;p&gt;The following modules were updated as part of Camden.RELEASE:&lt;/p&gt;
&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;Module &lt;/th&gt;
      &lt;th&gt;Version &lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;Spring Cloud Build &lt;/td&gt;
      &lt;td&gt;1.2.0.RELEASE &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Spring Cloud Stream &lt;/td&gt;
      &lt;td&gt;Brooklyn.RELEASE &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Spring Cloud Bus &lt;/td&gt;
      &lt;td&gt;1.2.0.RELEASE &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Spring Cloud Config &lt;/td&gt;
      &lt;td&gt;1.2.0.RELEASE &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Spring Cloud Netflix &lt;/td&gt;
      &lt;td&gt;1.2.0.RELEASE &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Spring Cloud Consul &lt;/td&gt;
      &lt;td&gt;1.1.0.RELEASE &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Spring Cloud Contract &lt;/td&gt;
      &lt;td&gt;1.0.0.RELEASE &lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;NOTE: Spring Cloud CLI 1.2.0.RC1 has been released. GA for the CLI project will happen shortly.&lt;/p&gt;
&lt;p&gt;The combined release train documentation is available &lt;a href="http://cloud.spring.io/spring-cloud-static/spring-cloud.html"&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;And, as always, we welcome feedback: either on &lt;a href="https://github.com/spring-cloud/"&gt;GitHub&lt;/a&gt;, on &lt;a href="https://gitter.im/spring-cloud/spring-cloud"&gt;Gitter&lt;/a&gt;, on &lt;a href="http://stackoverflow.com/questions/tagged/spring-cloud"&gt;Stack Overflow&lt;/a&gt;, or on &lt;a href="https://twitter.com/SpringCloudOSS"&gt;Twitter&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;To get started with Maven with a BOM (dependency management only):&lt;/p&gt;
&lt;pre&gt;&lt;code class="prettyprint"&gt;&amp;lt;dependencyManagement&amp;gt;&#xD;
  &amp;lt;dependencies&amp;gt;&#xD;
    &amp;lt;groupId&amp;gt;org.springframework.cloud&amp;lt;/groupId&amp;gt;&#xD;
    &amp;lt;artifactId&amp;gt;spring-cloud-dependencies&amp;lt;/artifactId&amp;gt;&#xD;
    &amp;lt;version&amp;gt;Camden.RELEASE&amp;lt;/version&amp;gt;&#xD;
    &amp;lt;type&amp;gt;pom&amp;lt;/type&amp;gt;&#xD;
    &amp;lt;scope&amp;gt;import&amp;lt;/scope&amp;gt;&#xD;
  &amp;lt;/dependencies&amp;gt;&#xD;
&amp;lt;/dependencyManagement&amp;gt;&#xD;
&amp;lt;dependencies&amp;gt;&#xD;
  &amp;lt;dependency&amp;gt;&#xD;
    &amp;lt;groupId&amp;gt;org.springframework.cloud&amp;lt;/groupId&amp;gt;&#xD;
    &amp;lt;artifactId&amp;gt;spring-cloud-starter-config&amp;lt;/artifactId&amp;gt;&#xD;
  &amp;lt;/dependency&amp;gt;&#xD;
  &amp;lt;dependency&amp;gt;&#xD;
    &amp;lt;groupId&amp;gt;org.springframework.cloud&amp;lt;/groupId&amp;gt;&#xD;
    &amp;lt;artifactId&amp;gt;spring-cloud-starter-eureka&amp;lt;/artifactId&amp;gt;&#xD;
  &amp;lt;/dependency&amp;gt;&#xD;
  ...&#xD;
&amp;lt;/dependencies&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;or with Gradle:&lt;/p&gt;
&lt;pre&gt;&lt;code class="prettyprint"&gt;buildscript {&#xD;
  dependencies {&#xD;
    classpath &amp;quot;org.springframework.boot:spring-boot-gradle-plugin:1.4.1.RELEASE&amp;quot;&#xD;
  }&#xD;
}&#xD;
&#xD;
apply plugin: &amp;quot;spring-boot&amp;quot;&#xD;
&#xD;
dependencyManagement {&#xD;
  imports {&#xD;
    mavenBom &amp;#39;org.springframework.cloud:spring-cloud-dependencies:Camden.RELEASE&amp;#39;&#xD;
  }&#xD;
}&#xD;
&#xD;
dependencies {&#xD;
    compile &amp;#39;org.springframework.cloud:spring-cloud-starter-config&amp;#39;&#xD;
    compile &amp;#39;org.springframework.cloud:spring-cloud-starter-eureka&amp;#39;&#xD;
    ...&#xD;
}
&lt;/code&gt;&lt;/pre&gt;</content>
  </entry>
  <entry>
    <title>SpringOne Platform 2016 Replay: Spring MVC 4 Web Apps</title>
    <link rel="alternate" href="https://spring.io/blog/2016/09/26/springone-platform-2016-replay-spring-mvc-4-web-apps" />
    <category term="news" label="News and Events" />
    <author>
      <name>Pieter Humphrey</name>
    </author>
    <id>tag:spring.io,2016-09-26:2637</id>
    <updated>2016-09-26T11:15:00Z</updated>
    <content type="html">&lt;p&gt;Recorded at SpringOne Platform 2016.&lt;br/&gt;Speaker: Rossen Stoyanchev&lt;br/&gt;Slides: &lt;a href="http://www.slideshare.net/SpringCentral/spring-mvc-4-web-apps"&gt;http://www.slideshare.net/SpringCentral/spring-mvc-4-web-apps&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Spring Framework 4.3 is the last in the 4.x generation and it brings plenty of refinements to the @MVC programming model. In Spring Framework 5.0 the same programming model will be supported on a new reactive foundation. This talk will review the main features in 4.x and preview the work towards Spring Framework 5.0.&lt;/p&gt;
&lt;iframe width="560" height="315" src="https://www.youtube.com/embed/6Y1dwidNJPQ" frameborder="0" allowfullscreen&gt;&lt;/iframe&gt;</content>
  </entry>
</feed>
